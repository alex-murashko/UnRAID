<?xml version='1.0' standalone='yes'?><PLUGIN><!--This Plugin installs and provides Logitech Media Server (formally slimserver / squeezebox server) for unRAID.All dependencies are installed and everything is controlable from the webgui2011-08-15 1lt - first release2012-02-05 1.1 arberg - Made updates possible (perhaps), resolved some problems with lost data on reboot (slimserver.pl cachedir, prefsdir param)2012-03-18 1.2 arberg - Sets LANG=en_US.utf8 before starting slimserver.pl which seems to suffice, getting utf-8 for file name encoding (it would not be necessary to set this LANG if it was already defined as such in /etc/profile.d/lang.sh). Moved install to rc.d runlevel scripts executed on array-mount, to avoid install-problems on reboot.2012-10-08 1.3 MODIFIED - Updated and added latest 7.8.0 all credit for PLG file to original author2012-10-28 1.4 overbyrn - Reworked to auto-detect newest release by scraping logitech download web page. Early support for nightly builds also.  Simplified installation (removed symlinks, removed dedicated user - now runs as user nobody, reverted to flat application dir).  Reworded below comment on what the plugin does.  Updated wording throughout plugin to logitechmediaserver or LMS2012-12-27 1.5 overbyrn - added extra check/pid kill for spotifyd process.  was preventing array from stopping.  only valid if 3rd party spotify plugin is installedUpon first install, only the dependencies (eg. perl) and files necessary to manage the plugin from webgui are installed.  The application does not get downloaded until the user has chosen whether touse stable or nightly builds and manually performs the installation from webgui.Since the root file system in unRaid is ram-based, installing to anywhere outside of the array or acache disk is strongly discourgaged as all content will get lost upon re-boot.  The default installation path is /mnt/disk1/lms, although this is configurable from the webgui. The directory contains all the Logitech Media Server code and user data.  It is assumed the user will always have the installation on either an array or cache disk.  Uponsebsequent reboots, the plugin checks whether the it is "enabled" and attempts to start LMS in anarray start event handler.  This way, we can be certain the application will only be started oncethe array and therefore installation location has come online.Obviously the disk containing the install needs to be spun up when accessing music.--><FILE Name="/boot/packages/perl-5.10.1-i486-1.txz" Run="upgradepkg --install-new"><URL>-q --no-check-certificate https://dl.dropbox.com/u/572553/UnRAID/packages.generic/perl-5.10.1-i486-1.txz</URL></FILE><FILE Name="/boot/config/plugins/lms/lms.png"><URL>http://lime-technology.com/wiki/images/5/5e/Slimserver.png</URL></FILE><FILE Name="/boot/config/plugins/images/device_status.png"><URL>-q --no-check-certificate https://dl.dropbox.com/u/572553/UnRAID/plugin.images/device_status.png</URL></FILE><FILE Name="/boot/config/plugins/images/new_config.png"><URL>-q --no-check-certificate https://dl.dropbox.com/u/572553/UnRAID/plugin.images/new_config.png</URL></FILE><FILE Name="/boot/config/plugins/images/information.png"><URL>-q --no-check-certificate https://dl.dropbox.com/u/572553/UnRAID/plugin.images/information.png</URL></FILE><FILE Name="/boot/config/plugins/lms/lms.cfg"><INLINE><![CDATA[# lms configurationSERVICE="disable"PORT="9000"INSTALLDIR="/mnt/disk1/lms"INSTVER="x.x.x"NIGHTLY="no"]]></INLINE></FILE><FILE Name="/tmp/lms-cleanup" Run="/bin/bash"><INLINE><![CDATA[#Remove currently installed plugin files[ -d /usr/local/emhttp/plugins/lms/ ] && rm -rf /usr/local/emhttp/plugins/lms[ -d /var/run/lms/ ] && rm -rf /var/run/lms[ -f /var/log/plugins/lms/ ] && rm -f /var/log/plugins/lmsrm /tmp/lms-cleanup]]></INLINE></FILE><FILE Name="/etc/rc.d/rc.lms" Mode="0770"><INLINE><![CDATA[#!/bin/sh# start|stop|restart|enable|disable|install|buttonstart|update|getnetver lms.lms_start(){  # no-op if not enabled  if [ $SERVICE != "enable" ]; then    echo "Service is not enabled!"    sleep 1    return  fi     # no-op if already running  if [ -f /var/run/lms/lms.pid ]; then    echo "LMS already running!"    sleep 1    return  fi        # if not installed yet, call install function  if [ ! -f "$INSTALLDIR/slimserver.pl" ]; then    lms_install  fi  echo "Starting LMS..."  sleep 1  export LANG=en_US.utf8  CMDLINE="$INSTALLDIR/slimserver.pl --dameon --user nobody --group users --httpport $PORT --pidfile /var/run/lms/lms.pid --cachedir $INSTALLDIR/Cache  --prefsdir $INSTALLDIR/prefs > /dev/null 2>&1"  nohup sudo -u nobody $CMDLINE > /var/log/plugins/lms 2>&1 &  TIMER=0  while [ ! -e /var/run/lms/lms.pid ]; do    sleep 1    let TIMER=$TIMER+1    if [ $TIMER -gt 10 ]; then      echo -n "lms.pid not created for some reason"    break    fi  done    echo "... OK"  sleep 2}lms_stop(){     # no-op if already stopped  if [ ! -f /var/run/lms/lms.pid ]; then    return  fi      echo "Stopping LMS..."  sleep 1    kill -9 `cat /var/run/lms/lms.pid`    # remove copy of pid created during start  rm -f /var/run/lms/lms.pid    # go looking for spotify and kill if found. stems from spotify plugin (i think)  PID=$(ps -ef | grep spotifyd | grep -v grep | awk '{print $2}');  test "$PID" != "" && kill $PID    echo "... OK"  sleep 1}lms_restart(){  lms_stop  lms_start}lms_buttonstart(){  CONFIG="/boot/config/plugins/lms/lms.cfg"  if [ -f $CONFIG ]; then    sed -i "s/"disable"/"enable/"" $CONFIG    SERVICE=enable    lms_start  fi}write_config(){  echo "# lms configuration" > /boot/config/plugins/lms/lms.cfg  echo "SERVICE=\"$SERVICE\"" >> /boot/config/plugins/lms/lms.cfg  echo "PORT=\"$PORT\"" >> /boot/config/plugins/lms/lms.cfg  echo "INSTALLDIR=\"$INSTALLDIR\"" >> /boot/config/plugins/lms/lms.cfg  echo "INSTVER=\"$INSTVER\"" >> /boot/config/plugins/lms/lms.cfg  echo "NIGHTLY=\"$NIGHTLY\"" >> /boot/config/plugins/lms/lms.cfg}lms_enable(){  echo "Applying Settings ($1) ..."  sleep 2  SERVICE=$1 #enable  PORT="$2"  INSTALLDIR="$3"  NIGHTLY="$4"  PREVINST="$5"  write_config    if [ "$PREVINST" != "$INSTALLDIR" ]; then      if [ -f "$PREVINST/slimserver.pl" ]; then      echo "Previous installation location detected, moving/renaming..."      sleep 2      mv $PREVINST $INSTALLDIR      # need to change db loc in prefs      sed -i 's#.*dbsource: dbi:SQLite:dbname=.*#dbsource: dbi:SQLite:dbname='$INSTALLDIR/Cache/library.db'#' $INSTALLDIR/prefs/server.prefs    else      lms_install    fi  else    if [ ! -f "$INSTALLDIR/slimserver.pl" ]; then      lms_install    else      echo "Installation exists, updating config only"      sleep 2    fi  fi     lms_restart  echo "... OK"  sleep 1}lms_disable(){  echo "Applying Settings ($1) ..."  sleep 2  lms_stop  SERVICE=$1 #disable  PORT="$2"  INSTALLDIR="$3"  NIGHTLY="$4"  write_config  echo "... OK"  sleep 1}lms_install(){  echo "Installing LMS..."  sleep 1    # if local copy of application zip does not exist, download & store first  if ! test -n "$(find /boot/config/plugins/lms -maxdepth 1 -name 'logitechmediaserver*.tgz' -print -quit)"  then    echo "No local downloaded archive in plugin dir, checking online for latest version..."    sleep 3           if [ "$NIGHTLY" = "yes" ]; then            FILENAME=`wget -q http://downloads.slimdevices.com/nightly/?ver=7.8 -q -O - | grep -i LogitechMediaServer | sed -e 's/<[a-zA-Z\/][^>]*>//g' | grep logitechmediaserver-[0-9].[0-9].[0-9]-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].tgz`      PARTPATH=`wget -q http://downloads.slimdevices.com/nightly/?ver=7.8 -q -O - | grep -i $FILENAME | cut -d\" -f2 | awk -F\/ '{print "/"$1"/"$2"/"$3"/"}'`      VERSION=`echo $FILENAME | awk -F\- '{print $2}'`      BUILDREV=`echo $FILENAME | awk -F\- '{print $3}' | cut -f1 -d\.`          echo "Downloading nightly $FILENAME to /boot/config/plugins/lms..."      wget -q -P /boot/config/plugins/lms http://downloads.slimdevices.com/nightly$PARTPATH$FILENAME         INSTVER=$VERSION-$BUILDREV	      else         LATESTSTABLE=`wget -q http://downloads.slimdevices.com -q -O - | grep LogitechMediaServer | awk '{print $5}' | cut -d\" -f2 | sed 's,/$,,' | sort -V -r | sed q`   # eg. LogitechMediaServer_v7.7.2      VERSION=`echo $LATESTSTABLE | cut -f3- -d\v`  # eg. 7.7.2      FILENAME="logitechmediaserver-$VERSION.tgz"   # eg. logitechmediaserver-7.7.2.tgz      echo "Latest stable version : $VERSION"      sleep 2       echo "Downloading $FILENAME to /boot/config/plugins/lms..."      wget -q -P /boot/config/plugins/lms http://downloads.slimdevices.com/$LATESTSTABLE/$FILENAME	  INSTVER=$VERSION    fi    echo "Download complete..."    sleep 2  fi    # extract and remove unnecessary files  echo "Extracting LMS application to /tmp..."  tar -C /tmp -zxvf /boot/config/plugins/lms/logitechmediaserver-*.tgz > /dev/null 2>&1    echo "Cleaning unnecessary files..."  rm -rf /tmp/logitechmediaserver*/Changelog*  rm -rf /tmp/logitechmediaserver*/License*  rm -rf /tmp/logitechmediaserver*/Bin/arm-linux*  rm -rf /tmp/logitechmediaserver*/Bin/darwin*  rm -rf /tmp/logitechmediaserver*/Bin/i386-freebsd-64int*  rm -rf /tmp/logitechmediaserver*/Bin/powerpc-linux*  rm -rf /tmp/logitechmediaserver*/Bin/sparc-linux*  sleep 2    # move to final install location  echo "Moving LMS application to $INSTALLDIR..."  mv /tmp/logitechmediaserver-* $INSTALLDIR      if [ ! -d "$INSTALLDIR/playlists" ]; then    echo "Creating default playlist directory ($INSTALLDIR/playlists)"    mkdir "$INSTALLDIR/playlists"    sleep 2  fi    # change permissions and ownership  echo "Changing ownership (nobody) & permissions (0770 rwxrwx---)"  chown -R nobody:users $INSTALLDIR  chmod -R 0770 $INSTALLDIR  sleep 2    #update config file with installed version  write_config    echo "... OK"  sleep 1}lms_update() {   lms_stop    echo "Removing old LMS archive file from plugin directory..."  sleep 2  rm /boot/config/plugins/lms/logitechmediaserver*.tgz    echo "Renaming old LMS install to save user data during update..."  sleep 2  mv $INSTALLDIR $INSTALLDIR.lmsbak      lms_install    echo "Restoring LMS application data after update..."  sleep 2  mv $INSTALLDIR.lmsbak/prefs $INSTALLDIR  mv $INSTALLDIR.lmsbak/Logs $INSTALLDIR  mv $INSTALLDIR.lmsbak/Cache $INSTALLDIR  mv $INSTALLDIR.lmsbak/playlists/* $INSTALLDIR/playlists    echo "Removing old LMS installation..."  sleep 2  rm -rf $INSTALLDIR.lmsbak    lms_start}lms_getnetver(){  case "$1" in    'stable')      local LATESTSTABLE=`wget -q http://downloads.slimdevices.com -q -O - | grep LogitechMediaServer | awk '{print $5}' | cut -d\" -f2 | sed 's,/$,,' | sort -V -r | sed q`   # eg. LogitechMediaServer_v7.7.2      local VERSION=`echo $LATESTSTABLE | cut -f3- -d\v`    ;;    'nightly')      local FILENAME=`wget -q http://downloads.slimdevices.com/nightly/?ver=7.8 -q -O - | grep -i LogitechMediaServer | sed -e 's/<[a-zA-Z\/][^>]*>//g' | grep logitechmediaserver-[0-9].[0-9].[0-9]-[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9].tgz`      local BUILDREV=`echo $FILENAME | awk -F\- '{print $3}' | cut -f1 -d\.`      local VERSION=`echo $FILENAME | awk -F\- '{print $2}'`-$BUILDREV    ;;    *)      local VERSION="unknown"  esac  # nb: remember to use -n to remove CRLF as otherwise php var needs TRIM on the shell_exec line  echo -n "$VERSION"   }# read our configurationsource /boot/config/plugins/lms/lms.cfgcase "$1" in  'start')    lms_start  ;;  'stop')    lms_stop  ;;  'restart')    lms_restart  ;;  'enable')    lms_enable $1 $2 $3 $4 $5  ;;  'disable')    lms_disable $1 $2 $3 $4 $5  ;;  'install')    lms_install  ;;  'buttonstart')    lms_buttonstart  ;;  'update')    lms_update    ;;    'getnetver')    lms_getnetver $2    ;;     *)    echo "usage $0 start|stop|restart|enable|disable|install|buttonstart|update|getnetver"esac]]></INLINE></FILE><FILE Name="/usr/local/emhttp/plugins/lms/lms.png"><LOCAL>/boot/config/plugins/lms/lms.png</LOCAL></FILE><FILE Name="/usr/local/emhttp/plugins/lms/device_status.png"><LOCAL>/boot/config/plugins/images/device_status.png</LOCAL></FILE><FILE Name="/usr/local/emhttp/plugins/lms/new_config.png"><LOCAL>/boot/config/plugins/images/new_config.png</LOCAL></FILE><FILE Name="/usr/local/emhttp/plugins/lms/information.png"><LOCAL>/boot/config/plugins/images/information.png</LOCAL></FILE><FILE Name="/usr/local/emhttp/plugins/lms/lms.page"><INLINE><![CDATA[Menu="NetworkServices"Icon="lms.png"Version="1.4"Author="LimeTech-Modded"Type="php"Title="Logitech Media Server"]]></INLINE></FILE><FILE Name="/usr/local/emhttp/plugins/lms/lms.php"><INLINE><![CDATA[<?PHP$lms_cfg = parse_ini_file("/boot/config/plugins/lms/lms.cfg");$lms_curinstdir = $lms_cfg['INSTALLDIR'];$lms_installed = is_dir( $lms_cfg['INSTALLDIR']) ? "yes" : "no";if ($lms_installed=="yes") {  $lms_running = file_exists("/var/run/lms/lms.pid") ? "yes" : "no";  if ($lms_cfg['NIGHTLY'] == 'yes') {    $lms_netver = shell_exec("/etc/rc.d/rc.lms getnetver nightly");  }  else {    $lms_netver = shell_exec("/etc/rc.d/rc.lms getnetver stable");  } }?><html><head></head><body><div style="width: 49%; float:left; border: 0px solid black;">  <div id="title">    <span class="left">Status:&nbsp;<img src='/plugins/lms/device_status.png'>      <?if ($lms_installed=="yes"):?>        <?if ($lms_running=="yes"):?>              <span class="green"><a href="http://<?=$var['NAME'];?>:<?=$lms_cfg['PORT'];?>" style="color: green; text-decoration:none;" onmouseover="this.style.textDecoration='underline'" onmouseout="this.style.textDecoration='none'" title="Click here to open Logitech Media Server web page" target="_blank"><span class="green"><b>LMS is RUNNING on port <?=$lms_cfg['PORT'];?></b></span></a></span>        <?else:?>          <span class="red"><b>LMS is NOT RUNNING</b></span>        <?endif;?>      <?else:?>         <span class="red"><b>LMS is NOT INSTALLED</b></span>      <?endif;?>      </span>  </div>    <?if ($lms_installed=="yes"):?>    <?if ($lms_running=="yes"):?>      <div style="position:relative;float:left;width:50%;text-align:right; margin-bottom:24px">        <form name="lms_start_stop" method="POST" action="/update.htm" target="progressFrame">          <input type="hidden" name="cmd" value="/etc/rc.d/rc.lms stop">          <input type="submit" name="runCmd" value="Stop">        </form>      </div>      <div style="position:relative;float:left;width:50%;margin-bottom:24px">        <form name="lms_restart" method="POST" action="/update.htm" target="progressFrame">          <input type="hidden" name="cmd" value="/etc/rc.d/rc.lms restart">          <input type="submit" name="runCmd" value="Restart">        </form>      </div>              <?else:?>      <div style="position:relative;float:left;width:100%;text-align:center;margin-bottom:24px">        <form name="lms_start" method="POST" action="/update.htm" target="progressFrame">          <input type="hidden" name="cmd" value="/etc/rc.d/rc.lms buttonstart">          <input type="submit" name="runCmd" value="Start">        </form>      </div>    <?endif;?>  <?else:?>    <div style="position:relative;float:left;width:100%;text-align:center;margin-bottom:24px">      <form name="lms_install" method="POST" action="/update.htm" target="progressFrame">        <input type="hidden" name="cmd" value="/etc/rc.d/rc.lms install">                 <input type="submit" name="runCmd" value="Install">      </form>    </div>  <?endif;?>  <center><hr size="3" width="50%" color="grey"></center>  <?if ($lms_installed=="yes"):?>    <?if (($lms_cfg[INSTVER] != $lms_netver) && $lms_cfg[INSTVER] != "x.x.x"): ?>      <center>        <form name="lms_settings" method="POST" action="/update.htm" target="progressFrame">          <input type="hidden" name="cmd" value="/etc/rc.d/rc.lms update">          <p style="color:blue;margin-left:10px;">Update of Logitech Media Server available to version: <b><?=$lms_netver;?>&nbsp<?=($lms_cfg['NIGHTLY']=="no" ? '(stable)' : '(nightly)');?></b></p>          <hr size="3" width="50%" color="grey" style="margin-bottom:15px">          <input type="submit" name="runCmd" value="Update">        </form>        </center>       <?else:?>       <p style="margin-left:10px;">LMS Version: <?=$lms_cfg[INSTVER];?>&nbsp<?=($lms_cfg['NIGHTLY']=="no" ? '(stable)' : '(nightly)');?>&nbspinstalled.&nbsp&nbspNo upgrade available at this time</p>    <?endif; ?>  <?endif; ?>    </div><div style="width: 49%; float:right; border: 0px solid black;">  <div id="title">    <span class="left">Configuration:&nbsp;<img src='/plugins/lms/new_config.png'></span>  </div>  <form name="lms_settings" method="POST" action="/update.htm" target="progressFrame" onsubmit="validateForm();">    <input type="hidden" name="cmd" value="/etc/rc.d/rc.lms">    <input type="hidden" name="arg5" value="<?=$lms_curinstdir;?>">    <table class="settings">      <tr>        <td>Enable LMS Service:</td>        <td>          <select name="arg1" id="arg1" size="1">            <?=mk_option($lms_cfg['SERVICE'], "disable", "No");?>            <?=mk_option($lms_cfg['SERVICE'], "enable", "Yes");?>          </select>        </td>      </tr>      <tr>        <td>LMS Web Port:</td>        <td><input type="text" name="arg2" id="arg2" maxlength="60" value="<?=$lms_cfg['PORT'];?>"></td>      </tr>      <tr>        <td>LMS Installation Directory:</td>        <td><input type="text" name="arg3" id="arg3" maxlength="60" value="<?=$lms_cfg['INSTALLDIR'];?>"></td>      </tr>      <tr>      <td>Use Nightlies:</td>      <td>        <select name="arg4" size="1">          <?=mk_option($lms_cfg['NIGHTLY'], "no", "No");?>          <?=mk_option($lms_cfg['NIGHTLY'], "yes", "Yes");?>        </select>        <img src="/plugins/lms/information.png" title="Installing from other than stable versions is not recommended. Use this option at your own risk!"/>      </td>      </tr>    </table>    <div align="center">      <hr size="3" align="center" width="75%" color="grey" style="margin-top:20px;margin-bottom:18px">        <input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</button>    </div>      </form>  <br /></div><script type="text/javascript">function validateForm() {  document.getElementById('arg2').disabled = false;  document.getElementById('arg3').disabled = false;  document.getElementById('arg4').disabled = false;}function checkRUNNING(form) {  if ("<?=$lms_running;?>" == "yes") {    form.arg2.disabled = true;    form.arg3.disabled = true;    form.arg4.disabled = true;  }}checkRUNNING(document.lms_settings);</script></body></html>]]></INLINE></FILE><!-- event handler --><FILE Name="/usr/local/emhttp/plugins/lms/event/disks_mounted" Mode="0770"><INLINE><![CDATA[#!/bin/bash#load plugin configsource /boot/config/plugins/lms/lms.cfg#Start lms if enabled[ $SERVICE = "enable" ] && /etc/rc.d/rc.lms start]]></INLINE></FILE><!-- event handler --><FILE Name="/usr/local/emhttp/plugins/lms/event/unmounting_disks" Mode="0770"><INLINE><![CDATA[#!/bin/bash/etc/rc.d/rc.lms stop]]></INLINE></FILE><FILE Name="/tmp/lms-install" Run="/bin/bash"><INLINE><![CDATA[# create lms-writable directory for pid fileif [ ! -e /var/run/lms ]; then  mkdir -m 0777 /var/run/lms  chown nobody:users /var/run/lmsfirm /tmp/lms-install]]></INLINE></FILE><FILE Name="/var/log/plugins/lms"><INLINE><![CDATA[]]></INLINE></FILE></PLUGIN>