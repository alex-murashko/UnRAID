<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY plugin "DenyHosts">
<!ENTITY author "overbyrn">
<!ENTITY plgver "1.2a">
<!ENTITY pkg "/boot/packages">
<!ENTITY plg "/boot/config/plugins/denyhosts">
<!ENTITY img "/boot/config/plugins/images">
<!ENTITY gui "/usr/local/emhttp/plugins">
<!ENTITY ram "/usr/local/denyhosts">
<!ENTITY url1 "https://raw.github.com/overbyrn/UnRAID/master">
<!ENTITY url2 "https://dl.dropbox.com/u/572553/UnRAID">
<!ENTITY dev "false"><!-- set to "true" during plugin development -->
]>

<PLUGIN>
<!--
Copyright 2013, Rich Manton (overbyrn)

The plugin installs DenyHosts, a log-based intrusion prevention security tool for SSH

Plugin file locations:
 /boot/plugins/denyhosts_overbyrn.plg                                   # this file
 
 /tmp/plugin-prepare                                                    # network readiness script
 /tmp/plugin-cleanup                                                    # deletion script
 /tmp/plugin-install                                                    # installation script

 /boot/config/plugins/denyhosts/DenyHosts-2.6.tar.gz                    # denyhosts source
 /packages/python-2.6.6-i486-1.txz                                      # package (mandatory)
 
 /boot/config/plugins/denyhosts/denyhosts.png                           # icon file (copied to webgui plugin dir)
 /boot/config/plugins/images/device_status.png                          # icon file (copied to webgui plugin dir)
 /boot/config/plugins/images/new_config.png                             # icon file (copied to webgui plugin dir)
 /boot/config/plugins/images/information.png                            # icon file (copied to webgui plugin dir)
 /boot/config/plugins/denyhosts/denyhosts.cfg                           # non-volatile configuration
 /etc/rc.d/rc.denyhosts                                                 # plugin control script
 /usr/local/emhttp/plugins/denyhosts/denyhosts.page                     # page file for webGui menu system
 /usr/local/emhttp/plugins/denyhosts/denyhosts.php                      # webGui page code
 /usr/local/emhttp/plugins/denyhosts/denyhostsctl.php                   # webGui back-end control 

 /var/log/plugins/denyhosts                                             # created upon install success
 /var/run/denyhosts/denyhosts.pid                                       # run-time pid file

 /usr/bin/denyhosts.py                                                  # denyhosts python application
 /usr/local/denyhosts                                                   # denyhosts configuration directory
 /usr/local/denyhosts/data                                              # denyhosts work directory (default. should be relocated to non-volatile storage via webgui)
 
-->

<FILE Name="/tmp/plugin-prepare" Run="/bin/bash">
<INLINE>
# Wait until network is ready
timer=30
while [ $timer -gt 0 ]; do
  gateway=$(route -n | awk '/^0.0.0.0/ {print $2}')
  if [ -n "$gateway" ] &amp;&amp; [ $(ping -q -n -c 1 $gateway | awk -F, '/received/ {print $2}' | awk '{print $1}') -eq 1 ]; then
    break
  fi
  timer=$((timer-1))
  sleep 1
done
if [ $timer -eq 0 ]; then
  echo "No network communication !!!"
fi
# Remove this script
rm -f /tmp/plugin-prepare
</INLINE>
</FILE>

<FILE Name="&plg;/denyhosts.png">
<URL>-q --no-check-certificate &url2;/plugin.images/denyhosts.png</URL>
</FILE>

<FILE Name="&img;/device_status.png">
<URL>-q --no-check-certificate &url2;/plugin.images/device_status.png</URL>
</FILE>

<FILE Name="&img;/new_config.png">
<URL>-q --no-check-certificate &url2;/plugin.images/new_config.png</URL>
</FILE>

<FILE Name="&img;/information.png">
<URL>-q --no-check-certificate &url2;/plugin.images/information.png</URL>
</FILE>

<FILE Name="&pkg;/python-2.6.6-i486-1.txz" Run="upgradepkg --install-new">
<URL>-q --no-check-certificate &url2;/packages.generic/python-2.6.6-i486-1.txz</URL>
</FILE>

<FILE Name="&plg;/DenyHosts-2.6.tar.gz">
<URL>-q --no-check-certificate &url2;/packages.custom/DenyHosts-2.6.tar.gz</URL>
</FILE>

<FILE Name="/tmp/plugin-cleanup" Run="/bin/bash">
<INLINE>
# delete file but don't warn if file does not exist
rmNoWarn() {
  test -e $1 &amp;&amp; rm $1 2>/dev/null
}

# delete directory but don't warn if directory does not exist
rmRecursiveNoWarn() {
  test -e $1 &amp;&amp; rm -r $1 2>/dev/null
}

#Remove currently installed plugin files
rmNoWarn /etc/rc.d/rc.denyhosts                            # control script
rmNoWarn /var/run/denyhosts/denyhosts.pid                  # stale pid file
rmRecursiveNoWarn /usr/local/emhttp/plugins/denyhosts      # unraid webgui integration files
rmNoWarn /var/log/plugins/denyhosts                        # record of previous plugin installation

rm /tmp/plugin-cleanup
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/denyhosts/denyhosts.cfg">
<INLINE>
# denyhosts configuration
SERVICE=disable
WORK_DIR=/usr/local/denyhosts
PURGE_DENY=2w
DENY_THRESHOLD_INVALID=5
DENY_THRESHOLD_VALID=10
DENY_THRESHOLD_ROOT=1
DENY_THRESHOLD_RESTRICTED=1
SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS=YES
HOSTNAME_LOOKUP=NO
AGE_RESET_VALID=5d
AGE_RESET_ROOT=25d
AGE_RESET_RESTRICTED=25d
AGE_RESET_INVALID=10d
DAEMON_SLEEP=30s
DAEMON_PURGE=12h
SECURE_LOG=/var/log/syslog
HOSTS_DENY=/etc/hosts.deny
BLOCK_SERVICE=sshd
LOCK_FILE=/var/run/denyhosts/denyhosts.pid
DAEMON_LOG=/var/log/plugins/denyhosts.out
</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.denyhosts" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
# start|stop|restart|enable|disable|buttonstart|updateplg|getver|datacheck denyhosts.

denyhosts_start()
{
  # no-op if not enabled
  if [ $SERVICE != "enable" ]; then
    return
  fi

  # no-op if already running
  if [ -f /var/run/denyhosts/denyhosts.pid ]; then
    return
  fi   
  CMDLINE="/usr/bin/env python /usr/bin/denyhosts.py --daemon --config=/boot/config/plugins/denyhosts/denyhosts.cfg > /dev/null 2>&1"
  $CMDLINE
}

denyhosts_stop()
{   
  # no-op if already stopped
  if [ ! -f /var/run/denyhosts/denyhosts.pid ]; then
    return
  fi 

  #Denyhosts expects SIGTERM
  kill $(cat /var/run/denyhosts/denyhosts.pid)
  sleep 1

  #Expect the unexpected
  PID=$(ps -ef | grep denyhosts.py | grep -v grep | awk '{print $2}');
  test "$PID" != "" && kill -9 $PID
  [[ -f /var/run/denyhosts/denyhosts.pid ]] && rm -f /var/run/denyhosts/denyhosts.pid
}

denyhosts_restart()
{
  denyhosts_stop
  denyhosts_start
}

denyhosts_buttonstart()
{
  CONFIG="/boot/config/plugins/denyhosts/denyhosts.cfg"
  if [ -f $CONFIG ]; then
    # a less greedy sed.  only replaces the first occurance of disabled with enabled.  ie. will only hit service line which is (usually) always first in cfg
	sed -i "0,/"disable"/s/"disable"/"enable/"" $CONFIG 2>/dev/null  
	SERVICE=enable
    denyhosts_start
  fi
}

write_config()
{
  echo "# denyhosts configuration:" > /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "SERVICE=$SERVICE" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "WORK_DIR=$WORK_DIR" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "PURGE_DENY=$PURGE_DENY" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "DENY_THRESHOLD_INVALID=$DENY_THRESHOLD_INVALID" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "DENY_THRESHOLD_VALID=$DENY_THRESHOLD_VALID" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "DENY_THRESHOLD_ROOT=$DENY_THRESHOLD_ROOT" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "DENY_THRESHOLD_RESTRICTED=$DENY_THRESHOLD_RESTRICTED" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS=$SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "HOSTNAME_LOOKUP=$HOSTNAME_LOOKUP" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "AGE_RESET_VALID=$AGE_RESET_VALID" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "AGE_RESET_ROOT=$AGE_RESET_ROOT" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "AGE_RESET_RESTRICTED=$AGE_RESET_RESTRICTED" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "AGE_RESET_INVALID=$AGE_RESET_INVALID" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "DAEMON_SLEEP=$DAEMON_SLEEP" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "DAEMON_PURGE=$DAEMON_PURGE" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "SECURE_LOG=/var/log/syslog" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "HOSTS_DENY=/etc/hosts.deny" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "BLOCK_SERVICE=sshd" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "LOCK_FILE=/var/run/denyhosts/denyhosts.pid" >> /boot/config/plugins/denyhosts/denyhosts.cfg
  echo "DAEMON_LOG=/var/log/plugins/denyhosts.out  " >> /boot/config/plugins/denyhosts/denyhosts.cfg  
}

denyhosts_change_settings()
{
  #nb. when passing params from enable/disable functions, params will take new numbering. ie. $2 in enable will become the first ($1) param here, and so on
  WORK_DIR=$1
  PURGE_DENY=$2
  DENY_THRESHOLD_INVALID=$3
  DENY_THRESHOLD_VALID=$4
  DENY_THRESHOLD_ROOT=$5
  DENY_THRESHOLD_RESTRICTED=$6
  
  #crappy hack to turn 0 or 1 value back to YES/NO for correct storage in cfg
  if [ "$7" = "0" ]; then
    SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS=NO
  else
    SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS=YES
  fi
  if [ "$8" = "0" ]; then
    HOSTNAME_LOOKUP=NO
  else
    HOSTNAME_LOOKUP=YES
  fi 

  AGE_RESET_VALID=$9
  AGE_RESET_ROOT=${10}
  AGE_RESET_RESTRICTED=${11}
  AGE_RESET_INVALID=${12}
  DAEMON_SLEEP=${13}
  DAEMON_PURGE=${14}
}

denyhosts_enable()
{
  SERVICE=$1 #enable
  denyhosts_change_settings $2 $3 $4 $5 $6 $7 $8 $9 ${10} ${11} ${12} ${13} ${14} ${15}
  write_config
  denyhosts_install
  denyhosts_restart
}

denyhosts_disable()
{
  denyhosts_stop
  SERVICE=$1 #disable
  denyhosts_change_settings $2 $3 $4 $5 $6 $7 $8 $9 ${10} ${11} ${12} ${13} ${14} ${15}
  write_config
}

denyhosts_updateplg()
{
  if [ -f /boot/config/plugins/denyhosts_overbyrn.plg ]; then
    denyhosts_stop;
    wget -q -P /tmp --no-check-certificate https://raw.github.com/overbyrn/UnRAID/master/denyhosts_overbyrn.plg 2>/dev/null
    if [ -f /tmp/denyhosts_overbyrn.plg ]; then
      mv -f /boot/config/plugins/denyhosts_overbyrn.plg /boot/config/plugins/denyhosts/denyhosts_overbyrn.plg.sav 2>/dev/null
      mv -f /tmp/denyhosts_overbyrn.plg /boot/config/plugins/denyhosts_overbyrn.plg 2>/dev/null
      /usr/local/sbin/installplg /boot/config/plugins/denyhosts_overbyrn.plg 2>/dev/null
    fi
    denyhosts_start;
  fi
}

denyhosts_plgver()
{
  case "$1" in
    'local')
      if [ -f /boot/config/plugins/denyhosts_overbyrn.plg ]; then
        VERSION=$(grep "<\!ENTITY plgver" /boot/config/plugins/denyhosts_overbyrn.plg | cut -d\" -f2)
	  else
	    VERSION=Unknown
	  fi
    ;;
    'remote')
      VERSION=$(wget --no-check-certificate -q https://raw.github.com/overbyrn/UnRAID/master/denyhosts_overbyrn.plg -O - | grep "<\!ENTITY plgver" | cut -d\" -f2)
      if [ "$VERSION" == "" ]; then
        VERSION=Unknown
      fi
    ;;
  esac
  # nb: remember to use -n to remove CRLF as otherwise php var needs TRIM on the shell_exec line
  echo -n "$VERSION"
}

denyhosts_appver()
{
  case "$1" in
    'local')
      VERSION=$(/usr/bin/env python /usr/bin/denyhosts.py --version)
    ;;
    'remote')
      #APPVER=$(wget --no-check-certificate https://dl.dropbox.com/u/572553/UnRAID/plugin.version.control/denyhosts_appver.txt -q -O - |sed 's/_/-/g')
      #VERSION=$(echo $APPVER|awk -F- '{print $3"-"$2"-"$4}') 
      #currently not in use for this plugin.
      VERSION=$(cat /usr/local/dropbox/.dropbox-dist/VERSION)
      if [ "$VERSION" == "" ]; then
        VERSION=Unknown
      fi
    ;;
  esac
  echo -n "$VERSION"
}

denyhosts_getver()
{
  if [[ ! -z $1 && ! -z $2 ]]; then
  case "$1" in
    'plg')
      denyhosts_plgver $2
    ;;
    'app')
      denyhosts_appver $2
    ;;
  esac
  else
    echo "usage $0 getver plg|app local|remote"
  fi
}

denyhosts_datacheck()
{
  array=( ramfs proc tempfs sysfs )
  fs=$( stat -f -c '%T' $WORK_DIR )
  if [ "$fs" = "msdos" ]; then
    echo "<p style="color:red\;"><b>WARNING:</b> Your WORK_DIR is located on your flash drive. This can decrease the life span of your flash device!</p>"
  else
    for i in "${array[@]}"
    do
      if [ $i = $fs ]; then
        echo "<p style="color:red\;"><b>WARNING:</b> Your WORK_DIR is not persistent and WILL NOT survive a reboot. The WORK_DIR maintains a running history of past DenyHosts entries and ideally should be maintained across reboots.  Please locate your WORK_DIR on persistent storage. eg. cache/array disk</p>"
        break
      else
        echo "<p style="color:green\;">WORK_DIR located on persistent storage. Your data will persist after a reboot :-)</p>"
        break
      fi
    done
  fi
}

denyhosts_commithist()
{
  # use the GitHub API to retrieve the commit history for file passed as argument to this function
  # this is done in two phases;
  # 1. obtain the SHA hash for the most recent commit of the given file
  # 2. construct URL which will present a consolidated list of commits from most recent to oldest for given file
  if [ ! -z "$1" ]; then
    LAST_SHA=$(wget --no-check-certificate -q https://api.github.com/repos/overbyrn/UnRAID/commits?path=$1 -O - | grep -Pom 1 '"sha":.*?[^\\]",' | sed 's/[\",]//g' | cut -d' ' -f2)
    if [ ! -z "$LAST_SHA" ]; then
      COMMIT_URL=https://github.com/overbyrn/UnRAID/commits/$LAST_SHA/$1
      #echo "LAST_SHA = $LAST_SHA"
      #echo "COMMIT_URL = $COMMIT_URL"
      echo -n "$COMMIT_URL"
    else
      echo -n "URL could not be retrieved"
    fi
  else
    echo "Error: function expects name of file to be passed as parameter"
  fi
}

# read our configuration
source /boot/config/plugins/denyhosts/denyhosts.cfg

case "$1" in
  'start')
    denyhosts_start
  ;;
  'stop')
    denyhosts_stop
  ;;
  'restart')
    denyhosts_restart
  ;;
  'enable')
	denyhosts_enable $1 $2 $3 $4 $5 $6 $7 $8 $9 ${10} ${11} ${12} ${13} ${14} ${15}
  ;;
  'disable')
    denyhosts_disable $1 $2 $3 $4 $5 $6 $7 $8 $9 ${10} ${11} ${12} ${13} ${14} ${15}
  ;;
  'buttonstart')
    denyhosts_buttonstart
  ;;
  'updateplg')
    denyhosts_updateplg
  ;;
  'getver')
    denyhosts_getver $2 $3
    ;;  
  'datacheck')
    denyhosts_datacheck
  ;;
  'commithist')
    denyhosts_commithist $2
    ;;
    *)
    echo "usage $0 start|stop|restart|enable|disable|buttonstart|updateplg|getver|datacheck|commithist <argv0>"
esac
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/denyhosts/denyhosts.png">
<LOCAL>/boot/config/plugins/denyhosts/denyhosts.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/denyhosts/device_status.png">
<LOCAL>/boot/config/plugins/images/device_status.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/denyhosts/new_config.png">
<LOCAL>/boot/config/plugins/images/new_config.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/denyhosts/information.png">
<LOCAL>/boot/config/plugins/images/information.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/denyhosts/denyhosts.php">
<INLINE>
<![CDATA[
<?PHP
$denyhosts_cfg = parse_ini_file( "/boot/config/plugins/denyhosts/denyhosts.cfg");
$denyhosts_localplg = shell_exec("/etc/rc.d/rc.denyhosts getver plg local");
$denyhosts_remoteplg = shell_exec("/etc/rc.d/rc.denyhosts getver plg remote");
$denyhosts_localapp = shell_exec("/etc/rc.d/rc.denyhosts getver app local");
$denyhosts_running = file_exists( "/var/run/denyhosts/denyhosts.pid") ? "yes" : "no";
$denyhosts_datacheck = shell_exec ( "/etc/rc.d/rc.denyhosts datacheck" );
$denyhosts_commithist = shell_exec ( "/etc/rc.d/rc.denyhosts commithist denyhosts_overbyrn.plg" );
$controls_exist = "false";
$updates_exist = "false";
?>

<html>
  <head>
    <style type="text/css">
    .tooltip {
        border-bottom: 1px dotted #000000; color: #000000; outline: none;
        cursor: help; text-decoration: none;
        position: relative;
    }
    .tooltip span {
        margin-left: -999em;
        position: absolute;
    }
    .tooltip:hover span {
        border-radius: 5px 5px; -moz-border-radius: 5px; -webkit-border-radius: 5px; 
        box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1); -webkit-box-shadow: 5px 5px rgba(0, 0, 0, 0.1); -moz-box-shadow: 5px 5px rgba(0, 0, 0, 0.1);
        font-family: Calibri, Tahoma, Geneva, sans-serif;
        position: absolute; left: 1em; top: 2em; z-index: 99;
        margin-left: 0; width: 250px;
    }
    .classic { padding: 0.8em 1em; }
    * html a:hover { background: transparent; }
    .classic {background: #FFFFAA; border: 1px solid #FFAD33; }
    </style>
  </head>
<body>

<div style="width: 49%; float:left; border: 0px solid black;">
  <div id="title">
    <span class="left">Status:&nbsp;<img src='/plugins/denyhosts/device_status.png'>
      <?if ($denyhosts_running=="yes"):?>
        <span class="green"><b>DenyHosts is RUNNING</b></span>
      <?else:?>
        <span class="red"><b>DenyHosts is NOT RUNNING</b></span>
      <?endif;?>
    </span>
  </div>
  
  <div style="border: 0px solid black;">
    <span class="left">
      <p>
        <span class="green-text"><b><?=$denyhosts_localapp?></b></span>
          <? if ($denyhosts_running=="yes"): ?>
            <?=$denyhosts_datacheck?> 
          <?endif;?> 
      </p>
    </span>
  </div>
  
  <br></br>
  
  <div style="border: 0px solid black;">
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td>Plugin</td>
        <td>Local Version</td>
        <td>Online Version</td>
      </tr>
      <tr style="font-weight:bold; background:#FFFFFF;">
        <td>DenyHosts Plugin</td>
        <td>
          <?if ($denyhosts_localplg != "Unknown"):?>
              <span class="green-text"><?=$denyhosts_localplg?></span>
          <?else:?>
            <span class="red-text">UNKNOWN</span>
          <?endif;?>
        </td>
        <td>
          <?if ($denyhosts_remoteplg != "Unknown"):?>
            <?if ($denyhosts_commithist == "URL could not be retrieved"):?>  <!-- we didnt obtain the commit history for some reason, so just display the version -->
              <span class="green-text"><?=$denyhosts_remoteplg?></span>
            <?else:?>
              <span class="green-text">
                <?=$denyhosts_remoteplg?>
                <a href="<?=$denyhosts_commithist?>" style="color: green; text-decoration:none;" onmouseover="this.style.textDecoration='underline'" onmouseout="this.style.textDecoration='none'" title="GitHub Commit History" target="_blank">
                  <span class="green">
                    <b>[Commit Log]</b>
                  </span>
                </a>
              </span>
            <?endif;?> 
          <?else:?>
            <span class="red-text">UNKNOWN</span>
          <?endif;?>
        </td>
      </tr>
    </table>
  </div>

  <br></br>

  <div>
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="2">Control Actions</td>
      </tr>

      <?if ($denyhosts_running=="yes"):?>
        <tr>
        <td width="30%">
          <form name="denyhosts_start_stop" method="POST" action="/plugins/denyhosts/denyhostsctl.php" target="progressFrame">
            <input type="hidden" name="cmd" value="stop">
            <input type="submit" name="runCmd" value="Stop">
          </form>
        </td>
        <td>Stop DenyHosts Daemon</td>
        </tr>
        <tr>
        <td width="30%">
          <form name="denyhosts_restart" method="POST" action="/plugins/denyhosts/denyhostsctl.php" target="progressFrame">
            <input type="hidden" name="cmd" value="restart">
            <input type="submit" name="runCmd" value="Restart">
          </form>
        </td>
        <td>Restart DenyHosts Daemon</td>
        </tr>
        <?$controls_exist = "true"?>
      <?else:?>
        <tr>
        <td width="30%">
          <form name="denyhosts_start" method="POST" action="/plugins/denyhosts/denyhostsctl.php" target="progressFrame">
            <input type="hidden" name="cmd" value="buttonstart">
            <input type="submit" name="runCmd" value="Start">
          </form>
        </td>
        <td>Start DenyHosts Daemon</td>
        </tr>
        <?$controls_exist = "true"?>
      <?endif;?>
      <?if ($controls_exist=="false"):?>
        <tr>
          <td colspan="2" align="center">No Control Actions available</td>
        </tr>
      <?endif;?>
    </table>
  </div>
  <br></br>
  <div style="border: 0px solid black;">
    <table>
      <tr style="font-weight:bold; color:#333333; background:#F0F0F0; text-shadow:0 1px 1px #FFFFFF;">
        <td colspan="2">Updates</td>
      </tr>
      <?if (($denyhosts_remoteplg != $denyhosts_localplg) && ($denyhosts_localplg != "Unknown") && ($denyhosts_remoteplg != "Unknown")): ?>
        <tr>
        <td width="30%">
          <form name="denyhosts_updateplg" method="POST" action="/plugins/denyhosts/denyhostsctl.php" target="progressFrame">
            <input type="hidden" name="cmd" value="updateplg">
            <input type="submit" name="runCmd" value="Update Plugin">
          </form>
        </td>
        <td><span class="red-text">An update is available to the plugin</span></td>
        </tr>
        <?$updates_exist="true"?>
      <?endif;?>

      <?if ($updates_exist=="false"):?>
        <tr>
          <td colspan="2" align="center">No updates available at this time</td>
        </tr>
      <?endif;?>
    </table>
  </div>
  <br></br>
  <br></br>
</div>

<div style="width: 49%; float:right; border: 0px solid black;">
  <div id="title">
    <span class="left">Configuration:&nbsp;<img src='/plugins/denyhosts/new_config.png'></span>
  </div>
  <form name="denyhosts_settings" id="denyhosts_settings" method="POST" action="/plugins/denyhosts/denyhostsctl.php" target="progressFrame" onsubmit="return validateForm();">
  <!--note to self: the /return/ in the onsubmit event is important as without it, the submit action is still processed-->
    <input type="hidden" name="cmd" value="apply">  
    <table class="settings">
      <tr>
      <td>Enable Denyhosts:</td>
      <td><select name="SERVICE" size="1"  onChange="checkRUNNING(this.form);">
         <?=mk_option($denyhosts_cfg['SERVICE'], "disable", "No");?>
         <?=mk_option($denyhosts_cfg['SERVICE'], "enable", "Yes");?>
         </select></td>
      </tr>
      <tr>
      <td>Work Directory (WORK_DIR):</td>
      <td><input type="text" name="WORK_DIR" value="<?=$denyhosts_cfg['WORK_DIR'];?>"></td>
      </tr> 
      <tr>
      <td><a class="tooltip" href="#">Purge Deny:<span class="classic">Removes entries that are older than this time</span></a></td>
      <td>
      <input type="text" name="PURGE_DENY" value="<?=$denyhosts_cfg['PURGE_DENY'];?>" title="format is: i[dhwmy] Where 'i' is an integer (eg. 7) 'm' = minutes, 'h' = hours, 'd' = days, 'w' = weeks, 'y' = years">
      </td>
      </tr>      
      <tr>
      <td><a class="tooltip" href="#">Deny Threshold Invalid:<span class="classic">Block each host after the number of failed login attempts has exceeded this value.  This value applies to invalid user login attempts (eg. non-existent user accounts)</span></a></td>
      <td><input type="text" name="DENY_THRESHOLD_INVALID" value="<?=$denyhosts_cfg['DENY_THRESHOLD_INVALID'];?>"></td>
      </tr>      
       <tr>
      <td><a class="tooltip" href="#">Deny Threshold Valid:<span class="classic">Block each host after the number of failed login attempts has exceeded this value.  This value applies to valid user login attempts (eg. user accounts that exist in /etc/passwd) except for the "root" user</span></</td>
      <td><input type="text" name="DENY_THRESHOLD_VALID" value="<?=$denyhosts_cfg['DENY_THRESHOLD_VALID'];?>"></td>
      </tr>     
      <tr>
      <td><a class="tooltip" href="#">Deny Threshold Root:<span class="classic">Block each host after the number of failed login attempts has exceeded this value.  This value applies to "root" user login attempts only.</span></</td>
      <td><input type="text" name="DENY_THRESHOLD_ROOT" value="<?=$denyhosts_cfg['DENY_THRESHOLD_ROOT'];?>"></td>
      </tr>     
      <tr>
      <td><a class="tooltip" href="#">Deny Threshold Restricted:<span class="classic">Block each host after the number of failed login attempts has exceeded this value.  This value applies to usernames that appear in the WORK_DIR/restricted-usernames file only</span></</td>
      <td><input type="text" name="DENY_THRESHOLD_RESTRICTED" value="<?=$denyhosts_cfg['DENY_THRESHOLD_RESTRICTED'];?>"></td>
      </tr>      
      <tr>
      <td><a class="tooltip" href="#">Suspicious Login Report Allowed Hosts:<span class="classic">If set to YES, if a suspicious login attempt results from an allowed-host then it is considered suspicious.  If this is NO, then suspicious logins from allowed-hosts will not be reported. All suspicious logins from ip addresses that are not in allowed-hosts will always be reported.</span></a></td>
      <td>
      <select name="SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS" size="1" onChange="checkRUNNING(this.form);">
        <?=mk_option($denyhosts_cfg['SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS'], 0, "No");?>
        <?=mk_option($denyhosts_cfg['SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS'], 1, "Yes");?>
      </select>
      </td>
      </tr>      
      <tr>
      <td><a class="tooltip" href="#">Hostname Lookup:<span class="classic">If set to YES, for each IP address that is reported by Denyhosts, the corresponding hostname will be looked up and reported as well if available).</span></a></td>
         <td><select name="HOSTNAME_LOOKUP" size="1" onChange="checkRUNNING(this.form);">
            <?=mk_option($denyhosts_cfg['HOSTNAME_LOOKUP'], 0, "No");?>
            <?=mk_option($denyhosts_cfg['HOSTNAME_LOOKUP'], 1, "Yes");?>
            </select>
          </td>
      </tr>           
      <tr>
      <td><a class="tooltip" href="#">Age Reset Valid:<span class="classic">Specifies the period of time between failed login attempts that, when exceeded will result in the failed count for this host to be reset to 0. This value applies to login attempts to all valid users (those within /etc/passwd) with the exception of root. If not defined, this count will never be reset.</span></a></td>
      <td><input type="text" name="AGE_RESET_VALID" value="<?=$denyhosts_cfg['AGE_RESET_VALID'];?>" title="format is: i[dhwmy] Where 'i' is an integer (eg. 7) 'm' = minutes, 'h' = hours, 'd' = days, 'w' = weeks, 'y' = years"></td>
      </tr>      
      <tr>
      <td><a class="tooltip" href="#">Age Reset Root:<span class="classic">Specifies the period of time between failed login attempts that, when exceeded will result in the failed count for this host to be reset to 0. This value applies to all login attempts to the "root" user account. If not defined, this count will never be reset.</span></a></td>
      <td><input type="text" name="AGE_RESET_ROOT" value="<?=$denyhosts_cfg['AGE_RESET_ROOT'];?>" title="format is: i[dhwmy] Where 'i' is an integer (eg. 7) 'm' = minutes, 'h' = hours, 'd' = days, 'w' = weeks, 'y' = years"></td>
      </tr>      
      <tr>
      <td><a class="tooltip" href="#">Age Reset Restricted:<span class="classic">Specifies the period of time between failed login attempts that, when exceeded will result in the failed count for this host to be reset to 0. This value applies to all login attempts to entries found in the WORK_DIR/restricted-usernames file. If not defined, the count will never be reset.</span></a></td>
      <td><input type="text" name="AGE_RESET_RESTRICTED" value="<?=$denyhosts_cfg['AGE_RESET_RESTRICTED'];?>" title="format is: i[dhwmy] Where 'i' is an integer (eg. 7) 'm' = minutes, 'h' = hours, 'd' = days, 'w' = weeks, 'y' = years"></td>
      </tr>      
      <tr>
      <td><a class="tooltip" href="#">Age Reset Invalid:<span class="classic">Specifies the period of time between failed login attempts that, when exceeded will result in the failed count for this host to be reset to 0.  This value applies to login attempts made to any invalid username (those that do not appear in /etc/passwd).  If not defined, count will never be reset.</span></a></td>
      <td><input type="text" name="AGE_RESET_INVALID" value="<?=$denyhosts_cfg['AGE_RESET_INVALID'];?>" title="format is: i[dhwmy] Where 'i' is an integer (eg. 7) 'm' = minutes, 'h' = hours, 'd' = days, 'w' = weeks, 'y' = years"></td>
      </tr>      
      <tr>
      <td><a class="tooltip" href="#">Daemon Sleep:<span class="classic">This is the amount of time DenyHosts will sleep between polling the syslog.</span></a></td>
      <td><input type="text" name="DAEMON_SLEEP" value="<?=$denyhosts_cfg['DAEMON_SLEEP'];?>" title="format is: i[dhwmy] Where 'i' is an integer (eg. 7) 'm' = minutes, 'h' = hours, 'd' = days, 'w' = weeks, 'y' = years"></td>
      </tr>      
      <tr>
      <td><a class="tooltip" href="#">Daemon Purge:<span class="classic">How often should DenyHosts run the purge mechanism to expire old entries in /etc/hosts.deny</span></a></td>
      <td><input type="text" name="DAEMON_PURGE" value="<?=$denyhosts_cfg['DAEMON_PURGE'];?>" title="format is: i[dhwmy] Where 'i' is an integer (eg. 7) 'm' = minutes, 'h' = hours, 'd' = days, 'w' = weeks, 'y' = years"></td>
      </tr>      
    </table>

    <div align="center">
      <hr size="3" align="center" width="75%" color="grey" style="margin-top:20px;margin-bottom:18px">
      <input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</button>      
    </div>
  </form>
  <br></br>
  <br></br>
</div>

<script type="text/javascript">
function onLoad() {
  // do nothing
}

function checkRUNNING(form) {
   if ("<?=$denyhosts_running;?>" == "yes") {
    form.WORK_DIR.disabled = true;
    form.PURGE_DENY.disabled = true;
    form.DENY_THRESHOLD_INVALID.disabled = true;
    form.DENY_THRESHOLD_VALID.disabled = true;
    form.DENY_THRESHOLD_ROOT.disabled = true;
    form.DENY_THRESHOLD_RESTRICTED.disabled = true;
    form.SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS.disabled = true;
    form.HOSTNAME_LOOKUP.disabled = true;
    form.AGE_RESET_VALID.disabled = true;
    form.AGE_RESET_ROOT.disabled = true;
    form.AGE_RESET_RESTRICTED.disabled = true;
    form.AGE_RESET_INVALID.disabled = true;
    form.DAEMON_SLEEP.disabled = true;
    form.DAEMON_PURGE.disabled = true;
   }
}

function validateForm() {
  document.forms["denyhosts_settings"]["WORK_DIR"].disabled = false;  
  document.forms["denyhosts_settings"]["WORK_DIR"].disabled = false;
  document.forms["denyhosts_settings"]["PURGE_DENY"].disabled = false;
  document.forms["denyhosts_settings"]["DENY_THRESHOLD_INVALID"].disabled = false;
  document.forms["denyhosts_settings"]["DENY_THRESHOLD_VALID"].disabled = false;
  document.forms["denyhosts_settings"]["DENY_THRESHOLD_ROOT"].disabled = false;
  document.forms["denyhosts_settings"]["DENY_THRESHOLD_RESTRICTED"].disabled = false;
  document.forms["denyhosts_settings"]["SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS"].disabled = false;
  document.forms["denyhosts_settings"]["HOSTNAME_LOOKUP"].disabled = false;
  document.forms["denyhosts_settings"]["AGE_RESET_VALID"].disabled = false;
  document.forms["denyhosts_settings"]["AGE_RESET_ROOT"].disabled = false;
  document.forms["denyhosts_settings"]["AGE_RESET_RESTRICTED"].disabled = false;
  document.forms["denyhosts_settings"]["AGE_RESET_INVALID"].disabled = false;
  document.forms["denyhosts_settings"]["DAEMON_SLEEP"].disabled = false;
  document.forms["denyhosts_settings"]["DAEMON_PURGE"].disabled = false;  

  return (true);
}

onLoad();
checkRUNNING(document.denyhosts_settings);
</script>
</body>
</html>
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/denyhosts/denyhostsctl.php" Mode="0770">
<INLINE>
<![CDATA[
<?PHP
  $logfile = "/var/log/plugins/denyhosts";
  $configfile = "/boot/config/plugins/denyhosts/denyhosts.cfg";

  if (empty($_SERVER['SHELL']))
    $newline = "<br>";
  else
    $newline = "\n";

  $cur_dt = date("F j\, Y h:i:s A");
  write_log("\nStart: $cur_dt");
 
  $settings = array(
    "SERVICE",
    "WORK_DIR",
	"PURGE_DENY",
	"DENY_THRESHOLD_INVALID",
	"DENY_THRESHOLD_VALID",
    "DENY_THRESHOLD_ROOT",
    "DENY_THRESHOLD_RESTRICTED",
    "SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS",
    "HOSTNAME_LOOKUP",
    "AGE_RESET_VALID",
    "AGE_RESET_ROOT",
    "AGE_RESET_RESTRICTED",
    "AGE_RESET_INVALID",
    "DAEMON_SLEEP",
    "DAEMON_PURGE",    
  );
  
  
  parse_str($argv[1],$_POST);

  $SERVICE=$_POST['SERVICE'];
  $WORK_DIR=$_POST['WORK_DIR'];
  $PURGE_DENY=$_POST['PURGE_DENY'];
  $DENY_THRESHOLD_INVALID=$_POST['DENY_THRESHOLD_INVALID'];
  $DENY_THRESHOLD_VALID=$_POST['DENY_THRESHOLD_VALID'];
  $DENY_THRESHOLD_ROOT=$_POST['DENY_THRESHOLD_ROOT'];
  $DENY_THRESHOLD_RESTRICTED=$_POST['DENY_THRESHOLD_RESTRICTED'];
  $SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS=$_POST['SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS'];
  $HOSTNAME_LOOKUP=$_POST['HOSTNAME_LOOKUP'];
  $AGE_RESET_VALID=$_POST['AGE_RESET_VALID'];
  $AGE_RESET_ROOT=$_POST['AGE_RESET_ROOT'];
  $AGE_RESET_RESTRICTED=$_POST['AGE_RESET_RESTRICTED'];
  $AGE_RESET_INVALID=$_POST['AGE_RESET_INVALID'];
  $DAEMON_SLEEP=$_POST['DAEMON_SLEEP'];
  $DAEMON_PURGE=$_POST['DAEMON_PURGE'];

  switch ($_POST['cmd']) {
    case 'apply':
      if ($SERVICE == "enable") {
        enabledenyhosts();
      }
      else
        disabledenyhosts();
      break;
    case 'buttonstart':
      buttonstartdenyhosts();
      break;
    case 'restart':
      restartdenyhosts();
      break;
    case 'stop':
      stopdenyhosts();
      break;
    case 'updateplg':
      updatedenyhosts();
      break;
    default:
    break;
  }

  if (empty($_SERVER['SHELL'])) {
    echo("<html>");
    echo("<head><script>var goback=parent.location;</script></head>");
    echo("<body onLoad=\"parent.location=goback;\"></body>");
    echo("</html>");
  }
  
  $cur_dt = date("F j\, Y h:i:s A");
  write_log("\nEnd: $cur_dt");
  
  function startdenyhosts() {
    global $newline, $log;
    exec_log("/etc/rc.d/rc.denyhosts start");
  }

  function buttonstartdenyhosts() {
    global $newline, $log;
    exec_log("/etc/rc.d/rc.denyhosts buttonstart");
  }

  function restartdenyhosts() {
    global $newline, $log;
    exec_log("/etc/rc.d/rc.denyhosts restart");
  }
  
  function stopdenyhosts() {
    global $newline, $log;
    exec_log("/etc/rc.d/rc.denyhosts stop");
  }

  function updatedenyhosts() {
    global $newline, $log;
    exec_log("/etc/rc.d/rc.denyhosts updateplg");
  }
  
  function enabledenyhosts() {
    global $newline, $log, $SERVICE, $WORK_DIR, $PURGE_DENY, $DENY_THRESHOLD_INVALID, $DENY_THRESHOLD_VALID, $DENY_THRESHOLD_ROOT, $DENY_THRESHOLD_RESTRICTED, $SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS, $HOSTNAME_LOOKUP, $AGE_RESET_VALID, $AGE_RESET_ROOT, $AGE_RESET_RESTRICTED, $AGE_RESET_INVALID, $DAEMON_SLEEP, $DAEMON_PURGE;
    exec_log("/etc/rc.d/rc.denyhosts $SERVICE $WORK_DIR $PURGE_DENY $DENY_THRESHOLD_INVALID $DENY_THRESHOLD_VALID $DENY_THRESHOLD_ROOT $DENY_THRESHOLD_RESTRICTED $SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS $HOSTNAME_LOOKUP $AGE_RESET_VALID $AGE_RESET_ROOT $AGE_RESET_RESTRICTED $AGE_RESET_INVALID $DAEMON_SLEEP $DAEMON_PURGE"); 
  }

  function disabledenyhosts() {
    global $newline, $log, $SERVICE, $WORK_DIR, $PURGE_DENY, $DENY_THRESHOLD_INVALID, $DENY_THRESHOLD_VALID, $DENY_THRESHOLD_ROOT, $DENY_THRESHOLD_RESTRICTED, $SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS, $HOSTNAME_LOOKUP, $AGE_RESET_VALID, $AGE_RESET_ROOT, $AGE_RESET_RESTRICTED, $AGE_RESET_INVALID, $DAEMON_SLEEP, $DAEMON_PURGE;
    //echo "<script type='text/javascript'>alert('DAEMON_PURGE: $DAEMON_PURGE');</script>";
    exec_log("/etc/rc.d/rc.denyhosts $SERVICE $WORK_DIR $PURGE_DENY $DENY_THRESHOLD_INVALID $DENY_THRESHOLD_VALID $DENY_THRESHOLD_ROOT $DENY_THRESHOLD_RESTRICTED $SUSPICIOUS_LOGIN_REPORT_ALLOWED_HOSTS $HOSTNAME_LOOKUP $AGE_RESET_VALID $AGE_RESET_ROOT $AGE_RESET_RESTRICTED $AGE_RESET_INVALID $DAEMON_SLEEP $DAEMON_PURGE"); 
  }
   
  function exec_log($cmd) {
    $results = exec($cmd);    
    $results = "\nCMD: $cmd \nResults: $results";
    write_log($results);
  }

  function write_log($contents) {
    global $logfile;
    write_string($logfile, "$contents\n", FALSE);
  }
    
  function write_string ($file, $contents, $overwrite) {
    if (file_exists($file)) {
      if ($overwrite)
          unlink($file);
          touch($file);
    }
    else {
      touch($file);
    }
    
    $fp = @fopen($file, 'a');
    @flock($fp, LOCK_EX);
    @fwrite($fp, $contents);
    @flock($fp, LOCK_UN);
    @fclose($fp);
  }

?>
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/denyhosts/event/disks_mounted" Mode="0770">
<INLINE>
#!/bin/bash
# include our config vars and check if the service is set to enable.  if so, bring it up
source /boot/config/plugins/denyhosts/denyhosts.cfg
[[ $SERVICE = "enable" ]] &amp;&amp; /etc/rc.d/rc.denyhosts buttonstart
</INLINE>
</FILE>

<!-- event handler to stop denyhosts when unmounting disks -->
<FILE Name="/usr/local/emhttp/plugins/denyhosts/event/unmounting_disks" Mode="0770">
<INLINE>
#!/bin/bash
/etc/rc.d/rc.denyhosts stop
</INLINE>
</FILE>

<FILE Name="/tmp/plugin-install" Run="/bin/bash">
<INLINE>
#!/bin/bash
# create denyhosts writable directory for pid file
if [ ! -e /var/run/denyhosts ]; then
  mkdir -m 0777 /var/run/denyhosts
  chown nobody:users /var/run/denyhosts
fi

# create denyhosts application directory
mkdir -p &ram;
  
# set permissions on application directory
chown -R root:users &ram;
chmod -R go-rwx,u-x,g+u,ug+X &ram;
  
#untar denyhosts file to tmp directory
tar -zxvf &plg;/DenyHosts-2.6.tar.gz -C /tmp

#patch setup.py to correct directory
sed -i -e '/^libpath = /c\\libpath = \"/usr/local/denyhosts\"' /tmp/DenyHosts-2.6/setup.py

#install denyhosts
cd /tmp/DenyHosts-2.6
/usr/bin/env python setup.py install

#clean-up tmp
rm -rf /tmp/DenyHosts-2.6

rm /tmp/plugin-install
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/denyhosts/denyhosts.page">
<INLINE>
Menu="NetworkServices"
Icon="denyhosts.png"
Version="&plgver;"
Author="&author;"
Type="php"
Title="&plugin;"
</INLINE>
</FILE>

<FILE Name="/var/log/plugins/denyhosts">
<INLINE>
&plugin; v&plgver;
</INLINE>
</FILE>

<FILE Name="/tmp/plugin-development" Run="/bin/bash">
<INLINE>
if [ "&dev;" == "true" ]; then
  if [ -f /boot/config/plugins/denyhosts.php ]; then
    rm -f &gui;/denyhosts/denyhosts.php
    ln -s /boot/config/plugins/denyhosts.php &gui;/denyhosts/denyhosts.php
  else
    mv &gui;/denyhosts/denyhosts.php /boot/config/plugins/denyhosts.php
    ln -s /boot/config/plugins/denyhosts.php &gui;/denyhosts/denyhosts.php
  fi
  if [ -f /boot/config/plugins/denyhostsctl.php ]; then
    rm -f &gui;/denyhosts/denyhostsctl.php
    ln -s /boot/config/plugins/denyhostsctl.php &gui;/denyhosts/denyhostsctl.php
  else
    mv &gui;/denyhosts/denyhostsctl.php /boot/config/plugins/denyhostsctl.php
    ln -s /boot/config/plugins/denyhostsctl.php &gui;/denyhosts/denyhostsctl.php
  fi  
  if [ -f /boot/config/plugins/rc.denyhosts ]; then
    rm -f /etc/rc.d/rc.denyhosts
    ln -s /boot/config/plugins/rc.denyhosts /etc/rc.d/rc.denyhosts
  else
    mv /etc/rc.d/rc.denyhosts /boot/config/plugins/rc.denyhosts
    ln -s /boot/config/plugins/rc.denyhosts /etc/rc.d/rc.denyhosts
  fi
fi

rm /tmp/plugin-development
</INLINE>
</FILE>

</PLUGIN>