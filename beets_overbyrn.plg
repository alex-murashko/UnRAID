<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY plugin "Beets">
<!ENTITY author "overbyrn">
<!ENTITY plgver "1.3">
<!ENTITY pkg "/boot/packages">
<!ENTITY plg "/boot/config/plugins/beets">
<!ENTITY img "/boot/config/plugins/images">
<!ENTITY gui "/usr/local/emhttp/plugins">
<!ENTITY url1 "https://raw.github.com/overbyrn/UnRAID/master">
<!ENTITY url2 "https://dl.dropbox.com/u/572553/UnRAID">
<!ENTITY dev "false"><!-- set to "true" during plugin development -->
]>

<PLUGIN>
<!--
Copyright 2013, Rich Manton (overbyrn)

This Plugin installs and provides support for Beets music tool on unRAID.

Plugin file locations:
 /boot/plugins/beets_overbyrn.plg                                       # this file
 /tmp/plugin-prepare                                                    # network readiness script
 /tmp/plugin-chkcfg                                                     # plugin cfg parameter upgrade check
 /tmp/plugin-cleanup                                                    # deletion script
 /tmp/plugin-install                                                    # installation script

 /packages/setuptools-0.6c11-i686-5sl.txz                               # primary package (mandatory)
 /packages/pip-1.3.tar.gz                                               # primary package (mandatory)
 /packages/python-2.6.6-i486-1.txz                                      # primary package (mandatory)
 /packages/sqlite-3.7.5-i486-1.txz                                      # primary package (mandatory)
 /packages/ffmpeg.static.32bit.2013-04-06.tar.gz                        # secondary package (required for beets convert)
 /packages/mp3gain-1.4.6-i486-3sl.txz                                   # secondary package (required for beets replygain)

 /boot/config/plugins/beets/beets.png                                   # icon file (copied to webgui plugin dir)
 /boot/config/plugins/images/device_status.png                          # icon file (copied to webgui plugin dir)
 /boot/config/plugins/images/new_config.png                             # icon file (copied to webgui plugin dir)
 /boot/config/plugins/images/information.png                            # icon file (copied to webgui plugin dir)
 /boot/config/plugins/beets/beets.cfg                                   # non-volatile configuration
 /boot/config/plugins/beets/beets.sh                                    # example sabnzbd post-processing script
 /etc/rc.d/rc.beets                                                     # plugin control script
 /usr/local/emhttp/plugins/beets/beets.page                             # page file for webGui menu system
 /usr/local/emhttp/plugins/beets/beets.php                              # webGui page code (settings)
 /usr/local/emhttp/plugins/beets/beetsctl.php                           # webGui control code (on submit)

 /var/log/plugins/beets                                                 # created upon install success
 
-->

<FILE Name="/tmp/plugin-prepare" Run="/bin/bash">
<INLINE>
# Wait until network is ready
timer=30
while [ $timer -gt 0 ]; do
  gateway=$(route -n | awk '/^0.0.0.0/ {print $2}')
  if [ -n "$gateway" ] &amp;&amp; [ $(ping -q -n -c 1 $gateway | awk -F, '/received/ {print $2}' | awk '{print $1}') -eq 1 ]; then
    break
  fi
  timer=$((timer-1))
  sleep 1
done
if [ $timer -eq 0 ]; then
  echo "No network communication !!!"
fi
# Remove this script
rm -f /tmp/plugin-prepare
</INLINE>
</FILE>

<FILE Name="&plg;/beets.png">
<URL>-q --no-check-certificate &url2;/plugin.images/beets.png</URL>
</FILE>

<FILE Name="&img;/device_status.png">
<URL>-q --no-check-certificate &url2;/plugin.images/device_status.png</URL>
</FILE>

<FILE Name="&img;/new_config.png">
<URL>-q --no-check-certificate &url2;/plugin.images/new_config.png</URL>
</FILE>

<FILE Name="&img;/information.png">
<URL>-q --no-check-certificate &url2;/plugin.images/information.png</URL>
</FILE>

<FILE Name="&pkg;/setuptools-0.6c11-i686-5sl.txz" Run="upgradepkg --install-new">
<URL>-q --no-check-certificate &url2;/packages.generic/setuptools-0.6c11-i686-5sl.txz</URL>
</FILE>

<FILE Name="&pkg;/python-2.6.6-i486-1.txz" Run="upgradepkg --install-new">
<URL>-q --no-check-certificate &url2;/packages.generic/python-2.6.6-i486-1.txz</URL>
</FILE>

<FILE Name="&pkg;/sqlite-3.7.5-i486-1.txz" Run="upgradepkg --install-new">
<URL>-q --no-check-certificate &url2;/packages.generic/sqlite-3.7.5-i486-1.txz</URL>
</FILE>

<FILE Name="&pkg;/mp3gain-1.4.6-i486-3sl.txz" Run="upgradepkg --install-new">
<URL>-q --no-check-certificate &url2;/packages.generic/mp3gain-1.4.6-i486-3sl.txz</URL>
</FILE>

<FILE Name="&plg;/ffmpeg.static.32bit.2013-04-06.tar.gz">
<URL>-q --no-check-certificate &url2;/packages.custom/ffmpeg.static.32bit.2013-04-06.tar.gz</URL>
</FILE>

<FILE Name="&plg;/pip-1.3.tar.gz">
<URL>-q --no-check-certificate &url2;/packages.custom/pip-1.3.tar.gz</URL>
</FILE>

<FILE Name="&plg;/fpcalc">
<URL>-q --no-check-certificate &url2;/packages.custom/fpcalc</URL>
</FILE>

<FILE Name="/tmp/plugin-cleanup" Run="/bin/bash">
<INLINE>
# delete file but don't warn if file does not exist
rmNoWarn() {
  test -e $1 &amp;&amp; rm $1 2>/dev/null
}

# delete directory but don't warn if directory does not exist
rmRecursiveNoWarn() {
  test -e $1 &amp;&amp; rm -r $1 2>/dev/null
}

#Remove currently installed plugin files
rmNoWarn /etc/rc.d/rc.beets                            # control script
rmNoWarn /var/run/beets/beets.pid                      # stale pid file
rmRecursiveNoWarn /usr/local/emhttp/plugins/beets      # unraid webgui integration files
rmNoWarn /var/log/plugins/beets                        # record of previous plugin installation

rm /tmp/plugin-cleanup
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/beets/beets.sh">
<INLINE>
<![CDATA[
#!/bin/bash
#
# beets music tagger - post-processing script
#
# Author: Rich Manton (overbyrn)
# Date: 29-04-13
#
# $1 - Fullpath of directory to be processed.  eg./mnt/user/downloads/some.artist_some.album

# $7 - Status of post processing. 0 = OK, 1 = failed verification, 2 = failed unpack, 3 = 1+2
if [ ! -z $7 ] && [ $7 -gt 0 ]; then
    echo "post-processing failed, bypassing script"
    exit 1
fi

# process files
echo "--------------------------"
echo $(date)
echo "Starting beets.sh for $(basename $1)"

BEETSDIR=/boot/config/plugins/beets
export BEETSDIR
FPCALC=/usr/local/sbin/fpcalc
export FPCALC
/usr/bin/beet -v import -q "$1"
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/beets/config.yaml">
<INLINE>
<![CDATA[
plugins: fetchart embedart convert scrub replaygain lastgenre chroma discogs
directory: /mnt/user/Music Tagging
library: /boot/config/plugins/beets/beets.blb
art_filename: cover
threaded: yes
original_date: no
per_disc_numbering: no
color: no

convert:
    auto: yes
    ffmpeg: /usr/bin/ffmpeg
    opts: -ab 320k -ac 2 -ar 48000
    max_bitrate: 320
    dest: /mnt/user/Music Tagging/Converted
    threads: 4
    
paths:
    default: Album Artists/$albumartist/$album%aunique{}/$track - $title
    singleton: Singles/$artist - $title
    comp: Various Artists/$album/$track - $title
    
import:
    write: yes
    copy: yes
    move: no
    resume: ask
    incremental: no
    quiet_fallback: skip
    timid: no
    log: /boot/config/plugins/beets/beetslog.txt

lastgenre:
    auto: yes
    source: album

embedart:
    auto: yes

fetchart:
    auto: yes
    
replaygain:
    auto: yes
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/beets/beets.cfg">
<INLINE>
#beets configuration
DESTDIR="/mnt/user/Music Tagging"
LIBDIR="/boot/config/plugins/beets/beets.blb"
ARTFILE="cover"
THREADED="yes"
ORIGDATE="no"
PERDISCNUM="no"
CONVERT_STATE="no"
CONVERT_OPTS="-ab 320k -ac 2 -ar 48000"
CONVERT_MAXBITRATE="320"
CONVERT_DESTINATION="/mnt/user/MusicTagging/Converted"
CONVERT_THREADS="4"
PATH_DEFAULT="Album Artists/$albumartist/$album%aunique{}/$track - $title"
PATH_SINGLETON="Singles/$artist - $title"
PATH_COMPILATION="Various Artists/$album/$track - $title"
IMPORT_WRITE="yes"
IMPORT_COPY="yes"
IMPORT_MOVE="no"
IMPORT_RESUME="ask"
IMPORT_INCREMENTAL="yes"
IMPORT_FALLBACK="skip"
IMPORT_TIMID="no"
IMPORT_LOG="/boot/config/plugins/beets/beetslog.txt"
LASTGENRE="yes"
LASTGENRESOURCE="album"
EMBEDART="yes"
FETCHART="yes"
REPLAYGAIN="no"
</INLINE>
</FILE>

<FILE Name="/tmp/plugin-chkcfg" Run="/bin/bash">
<INLINE>
<![CDATA[
#!/bin/bash
#nothing to see here, move along
rm /tmp/plugin-chkcfg
]]>
</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.beets" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash

write_yaml()
{
  #see comment in beetsctl.php
  
  #beets global options
  #sed -i "s#directory:.*#directory: $DESTDIR#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#library:.*#library: $LIBDIR#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#art_filename:.*#art_filename: $ARTFILE#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#threaded:.*#threaded: $THREADED#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#original_date:.*#original_date: $ORIGDATE#" /boot/config/plugins/beets/config.yaml  
  #sed -i "s#library:.*#library: $PERDISCNUM#" /boot/config/plugins/beets/config.yaml
  
  #beets convert settings
  sed -i "/convert:/ {N;s/convert:\n.*auto:.*/convert:\n    auto: $CONVERT_STATE/}" /boot/config/plugins/beets/config.yaml
  #sed -i "s#.*opts:.*#    opts: $CONVERT_OPTS#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#.*max_bitrate:.*#    max_bitrate: $CONVERT_MAXBITRATE#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#.*dest:.*#    dest: $CONVERT_DESTINATION#" /boot/config/plugins/beets/config.yaml  
  #sed -i "s#.*threads:.*#    threads: $CONVERT_THREADS#" /boot/config/plugins/beets/config.yaml 
  
  #beets path settings
  #sed -i "s#.*default:.*#    default: $PATH_DEFAULT#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#.*singleton:.*#    singleton: $PATH_SINGLETON#" /boot/config/plugins/beets/config.yaml  
  #sed -i "s#.*comp:.*#    comp: $PATH_COMPILATION#" /boot/config/plugins/beets/config.yaml 
  
  #beets import settings
  #sed -i "s#.*write:.*#    write: $IMPORT_WRITE#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#.*copy:.*#    copy: $IMPORT_COPY#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#.*move:.*#    move: $IMPORT_MOVE#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#.*resume:.*#    resume: $IMPORT_RESUME#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#.*incremental:.*#    incremental: $IMPORT_INCREMENTAL#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#.*quiet_fallback:.*#    quiet_fallback: $IMPORT_FALLBACK#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#.*timid:.*#    timid: $IMPORT_TIMID#" /boot/config/plugins/beets/config.yaml
  #sed -i "s#.*log:.*#    log: $IMPORT_LOG#" /boot/config/plugins/beets/config.yaml
  
  #beets plugin options
  sed -i "/lastgenre:/ {N;s/lastgenre:\n.*auto:.*/lastgenre:\n    auto: $LASTGENRE/}" /boot/config/plugins/beets/config.yaml
  #sed -i "s/.*source:.*/    source: $LASTGENRESOURCE/" /boot/config/plugins/beets/config.yaml
  sed -i "/embedart:/ {N;s/embedart:\n.*auto:.*/embedart:\n    auto: $EMBEDART/}" /boot/config/plugins/beets/config.yaml
  sed -i "/fetchart:/ {N;s/fetchart:\n.*auto:.*/fetchart:\n    auto: $FETCHART/}" /boot/config/plugins/beets/config.yaml
  sed -i "/replaygain:/ {N;s/replaygain:\n.*auto:.*/replaygain:\n    auto: $REPLAYGAIN/}" /boot/config/plugins/beets/config.yaml

}


# read our configuration
source /boot/config/plugins/beets/beets.cfg

case "$1" in
  'write_yaml')
    write_yaml
  ;;
  *)
  echo "usage $0 write_yaml"
esac
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/beets/beets.png">
<LOCAL>/boot/config/plugins/beets/beets.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/beets/device_status.png">
<LOCAL>/boot/config/plugins/images/device_status.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/beets/new_config.png">
<LOCAL>/boot/config/plugins/images/new_config.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/beets/information.png">
<LOCAL>/boot/config/plugins/images/information.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/beets/beets.php">
<INLINE>
<![CDATA[
<?PHP
$beets_cfg = parse_ini_file( "/boot/config/plugins/beets/beets.cfg");
?>

<html>
  <head>
    <style type="text/css">
    .tooltip {
        border-bottom: 1px dotted #000000; color: #000000; outline: none;
        cursor: help; text-decoration: none;
        position: relative;
    }
    .tooltip span {
        margin-left: -999em;
        position: absolute;
    }
    .tooltip:hover span {
        border-radius: 5px 5px; -moz-border-radius: 5px; -webkit-border-radius: 5px; 
        box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1); -webkit-box-shadow: 5px 5px rgba(0, 0, 0, 0.1); -moz-box-shadow: 5px 5px rgba(0, 0, 0, 0.1);
        font-family: Calibri, Tahoma, Geneva, sans-serif;
        position: absolute; left: 1em; top: 2em; z-index: 99;
        margin-left: 0; width: 250px;
    }
    .classic { padding: 0.8em 1em; }
    * html a:hover { background: transparent; }
    .classic {background: #FFFFAA; border: 1px solid #FFAD33; }
    </style>
  </head>
<body>

<form name="beets_settings" method="POST" action="/plugins/beets/beetsctl.php" target="progressFrame" onsubmit="return validateForm();">
  <input type="hidden" name="cmd" value="apply">  
  
  <div style="width: 49%; float:left; border: 0px solid black;">
    <div id="title">
      <span class="left"><img src='/plugins/beets/new_config.png'>&nbsp;Beets Configuration : Global Options</span>
    </div>
    
    <table class="settings">
    <tr>
      <td><a class="tooltip" href="#">Destination Directory:<span class="classic">The directory to which files will be copied/moved when adding them to the library.</span></a></td>
      <td><input type="text" name="DESTDIR" id="DESTDIR" maxlength="60" value="<?=$beets_cfg['DESTDIR'];?>"></td>
    </tr>
    <tr>
      <td><a class="tooltip" href="#">Beets Library Directory:<span class="classic">Path to the beets library file.</span></a></td>
      <td><input type="text" name="LIBDIR" id="LIBDIR" maxlength="60" value="<?=$beets_cfg['LIBDIR'];?>"></td>
    </tr>
    <tr>
      <td><a class="tooltip" href="#">Artwork Filename:<span class="classic">When importing album art, the name of the file (without extension) where the cover art image should be placed. Defaults to cover (eg. images will be named cover.jpg or cover.png and placed in the album's directory)</span></a></td>
      <td><input type="text" name="ARTFILE" id="ARTFILE" maxlength="60" value="<?=$beets_cfg['ARTFILE'];?>"></td>
    </tr>
    <tr>
      <td><a class="tooltip" href="#">Threaded:<span class="classic">Indicates whether the autotagger should use multiple threads. This makes things faster but may behave strangely.</span></a></td>
      <td>
        <select name="THREADED" id="THREADED" size="1">
          <?=mk_option($beets_cfg['THREADED'], "no", "No");?>
          <?=mk_option($beets_cfg['THREADED'], "yes", "Yes");?>
        </select>
      </td>
    </tr>
    <tr>
      <td><a class="tooltip" href="#">Original Date:<span class="classic">indicates whether matched albums should have their year, month, and day fields set to the release date of the original version of an album rather than the selected version of the release. That is, if this option is turned on, then year will always equal original_year and so on.</span></a></td>
      <td>
        <select name="ORIGDATE" id="ORIGDATE" size="1">
          <?=mk_option($beets_cfg['ORIGDATE'], "no", "No");?>
          <?=mk_option($beets_cfg['ORIGDATE'], "yes", "Yes");?>
        </select>
      </td>
    </tr>
    <tr>
      <td><a class="tooltip" href="#">Per Disc Numbering:<span class="classic">Controls track numbering style on multi-disc releases. When per_disc_numbering = no, tracks are numbered per-release, so the first track on the second disc has track number N+1 where N is the number of tracks on the first disc. If per_disc_numbering is enabled, then the first track on each disc always has track number 1. If you enable per_disc_numbering, you will likely want to change your Path Format Configuration also to include $disc before $track to make filenames sort correctly in album directories.</span></a></td>
      <td>
        <select name="PERDISCNUM" id="PERDISCNUM" size="1">
          <?=mk_option($beets_cfg['PERDISCNUM'], "no", "No");?>
          <?=mk_option($beets_cfg['PERDISCNUM'], "yes", "Yes");?>
        </select>
      </td>
      </tr>
    </table>    

    <div id="title">
      <span class="left"><img src='/plugins/beets/new_config.png'>&nbsp;Beets Configuration : Convert Settings</span>
    </div>
    
    <table class="settings">
    <tr>
    <td><a class="tooltip" href="#">Convert:<span class="classic">Controls whether to enable Beets 'Convert' plugin; used to transcode music and embed album art while exporting to a different directory.</span></a></td>
    <td>
      <select name="CONVERT_STATE" id="CONVERT_STATE" size="1">
        <?=mk_option($beets_cfg['CONVERT_STATE'], "no", "No");?>
        <?=mk_option($beets_cfg['CONVERT_STATE'], "yes", "Yes");?>
      </select>
    </td>        
    </tr>
    <tr>
      <td><a class="tooltip" href="#">Convert Opts:<span class="classic">These are the encoding options that are passed to ffmpeg. Default: "-aq 2". (Note that "-aq &lt;num&gt;" is equivalent to the LAME option "-V &lt;num&gt;".) If you want to specify a bitrate, use "-ab &lt;bitrate&gt;". Refer to the FFmpeg documentation for more details.</span></a></td>
      <td><input type="text" name="CONVERT_OPTS" id="CONVERT_OPTS" maxlength="60" value="<?=$beets_cfg['CONVERT_OPTS'];?>"></td>
    </tr>
    <tr>
      <td><a class="tooltip" href="#">Max Bitrate:<span class="classic">If you set max_bitrate, all MP3 files with a higher bitrate will be transcoded and those with a lower bitrate will simply be copied. Note that this does not guarantee that all converted files will have a lower bitrate as that depends on the encoder and its configuration. By default (maxbitrate = "0") MP3s will be copied without transcoding and all other formats will be converted.</span></a></td>
      <td><input type="text" name="CONVERT_MAXBITRATE" id="CONVERT_MAXBITRATE" maxlength="60" value="<?=$beets_cfg['CONVERT_MAXBITRATE'];?>"></td>
    </tr>
    <tr>
      <td><a class="tooltip" href="#">Destination:<span class="classic">Sets the directory the files will be converted (or copied) to.</span></a></td>
      <td><input type="text" name="CONVERT_DESTINATION" id="CONVERT_DESTINATION" maxlength="60" value="<?=$beets_cfg['CONVERT_DESTINATION'];?>"></td>
    </tr>
    <tr>
      <td><a class="tooltip" href="#">Threads:<span class="classic">Threads determines the number of threads to use for parallel encoding. By default, the plugin will detect the number of processors available and use them all.</span></a></td>
      <td><input type="text" name="CONVERT_THREADS" id="CONVERT_THREADS" maxlength="60" value="<?=$beets_cfg['CONVERT_THREADS'];?>"></td>
    </tr>      
    </table>   
    
    <div id="title">
      <span class="left"><img src='/plugins/beets/new_config.png'>&nbsp;Beets Configuration : Path Format</span>
    </div>
    
    <table class="settings">
    <tr>
      <td><a class="tooltip" href="#">Default:<span class="classic">You can also configure the directory hierarchy beets uses to store music. Each string is a template string that can refer to metadata fields like $artist or $title. The filename extension is added automatically. You can specify three special paths: default for most releases, comp for "various artist" releases with no dominant artist, and singleton for non-album tracks. For more about these format strings, see Path Formats section of the Beets Documentation. Note that you almost certainly want to use $albumartist and not $artist. The latter refers to the "track artist" when present, which means that albums that have tracks from different artists on them will be placed into different folders.</span></a></td>
      <td><input type="text" name="PATH_DEFAULT" id="PATH_DEFAULT" maxlength="60" value="<?=$beets_cfg['PATH_DEFAULT'];?>"></td>
    </tr>
    <tr>
      <td>Singleton:</td>
      <td><input type="text" name="PATH_SINGLETON" id="PATH_SINGLETON" maxlength="60" value="<?=$beets_cfg['PATH_SINGLETON'];?>"></td>
    </tr>
    <tr>
      <td>Compilation:</td>
      <td><input type="text" name="PATH_COMPILATION" id="PATH_COMPILATION" maxlength="60" value="<?=$beets_cfg['PATH_COMPILATION'];?>"></td>
    </tr>
    </table>  

    <br></br>
    <br></br>
    
  </div>

  <div style="width: 49%; float:right; border: 0px solid black;">

    <div id="title">
      <span class="left"><img src='/plugins/beets/new_config.png'>&nbsp;Beets Configuration : Import Options</span>
    </div> 

    <table class="settings">
      <tr>
      <td><a class="tooltip" href="#">Write:<span class="classic">Controls whether metadata (e.g., ID3) tags are written to files.</span></a></td>
      <td>
        <select name="IMPORT_WRITE" id="IMPORT_WRITE" size="1">
          <?=mk_option($beets_cfg['IMPORT_WRITE'], "no", "No");?>
          <?=mk_option($beets_cfg['IMPORT_WRITE'], "yes", "Yes");?>
        </select>
      </td>
      </tr>
      <tr>
      <td><a class="tooltip" href="#">Copy:<span class="classic">Controls whether to copy files into the library directory.  This option is ignored if move is enabled (i.e., beets can move or copy files but it doesn't make sense to do both).</span></a></td>
      <td>
        <select name="IMPORT_COPY" id="IMPORT_COPY" size="1">
          <?=mk_option($beets_cfg['IMPORT_COPY'], "no", "No");?>
          <?=mk_option($beets_cfg['IMPORT_COPY'], "yes", "Yes");?>
        </select>
      </td>
      </tr>
      <tr>
      <td><a class="tooltip" href="#">Move:<span class="classic">Controls whether to move files into the library directory.  The effect is similar to the copy option but you end up with only one copy of the imported file. ("Moving" works even across filesystems; if necessary, beets will copy and then delete when a simple rename is impossible.) Moving files can be risky; it's a good idea to keep a backup in case beets doesn't do what you expect with your files. This option overrides copy, so enabling it will always move (and not copy) files.</span></a></td>
      <td>
        <select name="IMPORT_MOVE" id="IMPORT_MOVE" size="1">
          <?=mk_option($beets_cfg['IMPORT_MOVE'], "no", "No");?>
          <?=mk_option($beets_cfg['IMPORT_MOVE'], "yes", "Yes");?>
        </select>
      </td>
      </tr>
      <tr>
      <td><a class="tooltip" href="#">Resume:<span class="classic">Controls whether interrupted imports should be resumed. "Yes" means that imports are always resumed when possible; "no" means resuming is disabled entirely; "ask" (the default) means that the user should be prompted when resuming is possible.</span></a></td>
      <td>
        <select name="IMPORT_RESUME" id="IMPORT_RESUME" size="1">
          <?=mk_option($beets_cfg['IMPORT_RESUME'], "no", "No");?>
          <?=mk_option($beets_cfg['IMPORT_RESUME'], "yes", "Yes");?>
          <?=mk_option($beets_cfg['IMPORT_RESUME'], "ask", "Ask");?>
        </select>
      </td>
      </tr>
      <tr>
      <td><a class="tooltip" href="#">Incremental:<span class="classic">Controls whether imported directories are recorded and whether these recorded directories are skipped. With this flag, beets will keep track of every directory it ever imports and avoid importing them again. This is useful if you have an "incoming" directory that you periodically add things to. To get this to work correctly, you'll need to use an incremental import every time you run an import on the directory in question, including the first time, when no subdirectories will be skipped. So consider enabling the incremental configuration option.</span></a></td>
      <td>
        <select name="IMPORT_INCREMENTAL" id="IMPORT_INCREMENTAL" size="1">
          <?=mk_option($beets_cfg['IMPORT_INCREMENTAL'], "no", "No");?>
          <?=mk_option($beets_cfg['IMPORT_INCREMENTAL'], "yes", "Yes");?>
        </select>
      </td>
      </tr>
      <tr>
      <td><a class="tooltip" href="#">Quiet Fallback:<span class="classic">Specifies what should happen when there is no strong recommendation. Whenever the normal autotagger mode would ask for confirmation, the quiet mode pessimistically skips the album. The quiet mode also disables the tagger's ability to resume interrupted imports.</span></a></td>
      <td>
        <select name="IMPORT_FALLBACK" id="IMPORT_FALLBACK" size="1">
          <?=mk_option($beets_cfg['IMPORT_FALLBACK'], "skip", "Skip");?>
          <?=mk_option($beets_cfg['IMPORT_FALLBACK'], "asis", "AsIs");?>
        </select>
      </td>
      </tr>
      <tr>
      <td><a class="tooltip" href="#">Timid:<span class="classic">Controls whether the importer runs in timid mode. By default, beets will proceed without asking if it finds a very close metadata match. To disable this and have the importer as you every time, enable this option.</span></a></td>
      <td>
        <select name="IMPORT_TIMID" id="IMPORT_TIMID" size="1">
          <?=mk_option($beets_cfg['IMPORT_TIMID'], "no", "No");?>
          <?=mk_option($beets_cfg['IMPORT_TIMID'], "yes", "Yes");?>
        </select>
      </td>
      </tr>
      <tr>
        <td><a class="tooltip" href="#">Import Log:<span class="classic">Specifies a filename where the importer's log should be kept.</span></a></td>
        <td><input type="text" name="IMPORT_LOG" id="IMPORT_LOG" maxlength="60" value="<?=$beets_cfg['IMPORT_LOG'];?>"></td>
      </tr>
    </table>

    <div id="title">
      <span class="left"><img src='/plugins/beets/new_config.png'>&nbsp;Beets Configuration : Plugin Options</span>
    </div>

    <table class="settings">
    <tr>
    <td><a class="tooltip" href="#">Use LastFM Genre:<span class="classic">Controls whether to enable Beets 'LastGenre' plugin. The MusicBrainz database does not contain genre information. Therefore, when importing and autotagging music, beets does not assign a genre. The lastgenre plugin fetches tags from Last.fm and assigns them as genres to your albums and items.</span></a></td>
    <td>
      <select name="LASTGENRE" id="LASTGENRE" size="1">
        <?=mk_option($beets_cfg['LASTGENRE'], "no", "No");?>
        <?=mk_option($beets_cfg['LASTGENRE'], "yes", "Yes");?>
      </select>
    </td>      
    </tr>
    <tr>
      <td><a class="tooltip" href="#">LastFM Genre Source:<span class="classic">When looking up genres for albums or individual tracks, you can choose whether to use Last.fm tags on the album, the artist, or the track. For example, you might want all the albums for a certain artist to carry the same genre. Set the source configuration value to "album", "track", or "artist". The default is "album". When set to "track", the plugin will fetch both album-level and track-level genres for your music when importing albums.</span></a></td>
      <td>
        <select name="LASTGENRESOURCE" id="LASTGENRESOURCE" size="1">
          <?=mk_option($beets_cfg['LASTGENRESOURCE'], "album", "Album");?>
          <?=mk_option($beets_cfg['LASTGENRESOURCE'], "track", "Track");?>
          <?=mk_option($beets_cfg['LASTGENRESOURCE'], "artist", "Artist");?>          
        </select>
      </td>
    </tr>
    <tr>
    <td><a class="tooltip" href="#">Embed Artwork:<span class="classic">Enables the EmbedArt plugin.  Enable this to automatically embed discovered album art into imported files. You'll also want to enable the FetchArt Plugin to obtain the images to be embedded. Art will be embedded after each album is added to the library.</span></a></td>
    <td>
      <select name="EMBEDART" id="EMBEDART" size="1">
        <?=mk_option($beets_cfg['EMBEDART'], "no", "No");?>
        <?=mk_option($beets_cfg['EMBEDART'], "yes", "Yes");?>
      </select>
    </td>      
    </tr>
    <tr>
    <td><a class="tooltip" href="#">Fetch Artwork:<span class="classic">Enables the FetchArt plugin. Use this to retrieve album art images from various sources on the Web and stores them as image files.</span></a></td>
    <td>
      <select name="FETCHART" id="FETCHART" size="1">
        <?=mk_option($beets_cfg['FETCHART'], "no", "No");?>
        <?=mk_option($beets_cfg['FETCHART'], "yes", "Yes");?>
      </select>
    </td>      
    </tr>
    <tr>
    <td><a class="tooltip" href="#">Replay Gain:<span class="classic">Enables the ReplayGain plugin, a technique for normalizing audio playback levels. The plugin will automatically analyze albums and individual tracks as you import them. It writes tags to each file according to the ReplayGain specification; if your player supports these tags, it can use them to do level adjustment.</span></a></td>
    <td>
      <select name="REPLAYGAIN" id="REPLAYGAIN" size="1">
        <?=mk_option($beets_cfg['REPLAYGAIN'], "no", "No");?>
        <?=mk_option($beets_cfg['REPLAYGAIN'], "yes", "Yes");?>
      </select>
    </td>      
    </tr>
    </table>
    
    <div align="center">
      <hr size="3" align="center" width="75%" color="grey" style="margin-top:20px;margin-bottom:18px">
      <input type="submit" name="runCmd" value="Apply"><button type="button" onClick="done();">Done</button>
    </div>   

  </div>
</form>


<script type="text/javascript">
function onLoad() {
  // nothing to see here
}

function validateForm() {
  // or here
}

//onLoad();
</script>

</body>
</html>
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/beets/beetsctl.php">
<INLINE>
<![CDATA[
<?PHP
  $logfile = "/var/log/plugins/beets";
  $configfile = "/boot/config/plugins/beets/beets.cfg";

  if (empty($_SERVER['SHELL']))
    $newline = "<br>";
  else
    $newline = "\n";

  $cur_dt = date("F j\, Y h:i:s A");
  write_log("\nStart: $cur_dt");

  $settings = array(
    "DESTDIR", "LIBDIR", "ARTFILE", "THREADED", "ORIGDATE", "PERDISCNUM",
    "CONVERT_STATE", "CONVERT_OPTS", "CONVERT_MAXBITRATE", "CONVERT_DESTINATION", "CONVERT_THREADS",
    "PATH_DEFAULT", "PATH_SINGLETON", "PATH_COMPILATION",
    "IMPORT_WRITE", "IMPORT_COPY", "IMPORT_MOVE", "IMPORT_RESUME", "IMPORT_INCREMENTAL", "IMPORT_FALLBACK", "IMPORT_TIMID", "IMPORT_LOG",
    "LASTGENRE", "LASTGENRESOURCE", "EMBEDART", "FETCHART", "REPLAYGAIN",
  );

  parse_str($argv[1],$_POST);

  $DESTDIR=$_POST['DESTDIR'];
  $LIBDIR=$_POST['LIBDIR'];
  $ARTFILE=$_POST['ARTFILE'];
  $THREADED=$_POST['THREADED'];
  $ORIGDATE=$_POST['ORIGDATE'];
  $PERDISCNUM=$_POST['PERDISCNUM'];
  $CONVERT_STATE=$_POST['CONVERT_STATE'];
  $CONVERT_OPTS=$_POST['CONVERT_OPTS'];
  $CONVERT_MAXBITRATE=$_POST['CONVERT_MAXBITRATE'];
  $CONVERT_DESTINATION=$_POST['CONVERT_DESTINATION'];
  $CONVERT_THREADS=$_POST['CONVERT_THREADS'];
  $PATH_DEFAULT=$_POST['PATH_DEFAULT'];
  $PATH_SINGLETON=$_POST['PATH_SINGLETON'];
  $PATH_COMPILATION=$_POST['PATH_COMPILATION'];
  $IMPORT_WRITE=$_POST['IMPORT_WRITE'];
  $IMPORT_COPY=$_POST['IMPORT_COPY'];
  $IMPORT_MOVE=$_POST['IMPORT_MOVE'];
  $IMPORT_RESUME=$_POST['IMPORT_RESUME'];
  $IMPORT_INCREMENTAL=$_POST['IMPORT_INCREMENTAL'];
  $IMPORT_FALLBACK=$_POST['IMPORT_FALLBACK'];
  $IMPORT_TIMID=$_POST['IMPORT_TIMID'];
  $IMPORT_LOG=$_POST['IMPORT_LOG'];
  $LASTGENRE=$_POST['LASTGENRE'];
  $LASTGENRESOURCE=$_POST['LASTGENRESOURCE'];
  $EMBEDART=$_POST['EMBEDART'];
  $FETCHART=$_POST['FETCHART'];
  $REPLAYGAIN=$_POST['REPLAYGAIN'];

  switch ($_POST['cmd']) {
    case 'apply':
      save_config();
      break;
    case 'updateplg':
      update_plugin();
      break;
    default:
    break;
  }

  if (empty($_SERVER['SHELL'])) {
    echo("<html>");
    echo("<head><script>var goback=parent.location;</script></head>");
    echo("<body onLoad=\"parent.location=goback;\"></body>");
    echo("</html>");
  }

  $cur_dt = date("F j\, Y h:i:s A");
  write_log("\nEnd: $cur_dt");

  function save_config () {

    global $_POST, $configfile, $settings, $newline,
    $DESTDIR, $LIBDIR, $ARTFILE, $THREADED, $ORIGDATE, $PERDISCNUM,
    $CONVERT_STATE, $CONVERT_OPTS, $CONVERT_MAXBITRATE, $CONVERT_DESTINATION, $CONVERT_THREADS,
    $PATH_DEFAULT, $PATH_SINGLETON, $PATH_COMPILATION,
    $IMPORT_WRITE, $IMPORT_COPY, $IMPORT_MOVE, $IMPORT_RESUME, $IMPORT_INCREMENTAL, $IMPORT_FALLBACK, $IMPORT_TIMID, $IMPORT_LOG,
    $LASTGENRE, $LASTGENRESOURCE, $EMBEDART, $FETCHART, $REPLAYGAIN;

    $string .= "#beets configuration\n";
    foreach ($_POST as $key=>$value) {
      if (in_array($key, $settings)) {
        $string .= "$key=\"$value\"\n";
      }
    }
    write_string($configfile, $string, TRUE);

    //example debug echo:
    //echo "<script type='text/javascript'>alert('The value of CONVERT_OPTS is : $CONVERT_OPTS');</script>";

    #beets global options
    exec("sed -i \"s#directory:.*#directory: $DESTDIR#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#library:.*#library: $LIBDIR#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#art_filename:.*#art_filename: $ARTFILE#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#threaded:.*#threaded: $THREADED#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#original_date:.*#original_date: $ORIGDATE#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#per_disc_numbering:.*#per_disc_numbering: $PERDISCNUM#\" /boot/config/plugins/beets/config.yaml");

    #beets convert settings
    //exec("sed -i \"/convert:/ {N;s/convert:\n.*auto:.*/convert:\n    auto: $CONVERT_STATE/}\" /boot/config/plugins/beets/config.yaml");

    exec("sed -i \"s#.*opts:.*#    opts: $CONVERT_OPTS#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#.*max_bitrate:.*#    max_bitrate: $CONVERT_MAXBITRATE#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#.*dest:.*#    dest: $CONVERT_DESTINATION#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#.*threads:.*#    threads: $CONVERT_THREADS#\" /boot/config/plugins/beets/config.yaml");

    #beets path settings
    exec("sed -i 's#.*default:.*#    default: $PATH_DEFAULT#' /boot/config/plugins/beets/config.yaml");
    exec("sed -i 's#.*singleton:.*#    singleton: $PATH_SINGLETON#' /boot/config/plugins/beets/config.yaml");
    exec("sed -i 's#.*comp:.*#    comp: $PATH_COMPILATION#' /boot/config/plugins/beets/config.yaml");

    #beets import settings
    exec("sed -i \"s#.*write:.*#    write: $IMPORT_WRITE#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#.*copy:.*#    copy: $IMPORT_COPY#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#.*move:.*#    move: $IMPORT_MOVE#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#.*resume:.*#    resume: $IMPORT_RESUME#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#.*incremental:.*#    incremental: $IMPORT_INCREMENTAL#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#.*quiet_fallback:.*#    quiet_fallback: $IMPORT_FALLBACK#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#.*timid:.*#    timid: $IMPORT_TIMID#\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s#.*log:.*#    log: $IMPORT_LOG#\" /boot/config/plugins/beets/config.yaml");

    #beets plugin options
    //exec("sed -i \"/lastgenre:/ {N;s/lastgenre:\n.*auto:.*/lastgenre:\n    auto: $LASTGENRE/}\" /boot/config/plugins/beets/config.yaml");
    exec("sed -i \"s/.*source:.*/    source: $LASTGENRESOURCE/\" /boot/config/plugins/beets/config.yaml");
    //exec("sed -i \"/embedart:/ {N;s/embedart:\n.*auto:.*/embedart:\n    auto: $EMBEDART/}\" /boot/config/plugins/beets/config.yaml");
    //exec("sed -i \"/fetchart:/ {N;s#fetchart:\n.*auto:.*/fetchart:\n    auto: $FETCHART/}\" /boot/config/plugins/beets/config.yaml");
    //exec("sed -i \"/replaygain:/ {N;s#replaygain:\n.*auto:.*/replaygain:\n    auto: $REPLAYGAIN/}\" /boot/config/plugins/beets/config.yaml");   
    
    #sigh... try as i might, i cannot fathom why the commented out seds above do not work when executed via php exec command.  the only difference
    #in their syntax is the use of multiline and sed groupings.  as i had originally written this in bash, i've done a cheap hack to perform these
    #problematic seds by calling a function in the rc script.
    
    exec_log("/etc/rc.d/rc.beets write_yaml");

  }

  function update_plugin() {
    global $newline, $log, $SERVICE, $PORT, $INSTALLDIR, $SUBENC, $SUBFONT, $AIR_PASS, $AIR_DIRS, $LOGGING;
    exec_log("/etc/rc.d/rc.beets updateplg");
  }

  function exec_log($cmd) {
    $results = exec($cmd);
    $results = "\nCMD: $cmd \nResults: $results";
    write_log($results);
  }

  function write_log($contents) {
    global $logfile;
    write_string($logfile, "$contents\n", FALSE);
  }

  function write_string ($file, $contents, $overwrite) {
    if (file_exists($file)) {
      if ($overwrite)
          unlink($file);
          touch($file);
    }
    else {
      touch($file);
    }

    $fp = @fopen($file, 'a');
    @flock($fp, LOCK_EX);
    @fwrite($fp, $contents);
    @flock($fp, LOCK_UN);
    @fclose($fp);
  }

?>
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/beets/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
#load plugin config
source /boot/config/plugins/beets/beets.cfg

#Start beets if enabled
[ $SERVICE = "enable" ] && /etc/rc.d/rc.beets start
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/beets/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.beets stop
]]>
</INLINE>
</FILE>

<FILE Name="/tmp/plugin-install" Run="/bin/bash">
<INLINE>
# install beets + supporting files
cd /tmp

# install pip
tar zxvf &plg;/pip-1.3.tar.gz -C /tmp -o
cd pip-1.3
python setup.py install
cd ..
rm -rf pip-1.3.tar.gz

# install ffmpeg (needed for beets convert function)
tar zxvf &plg;/ffmpeg.static.32bit.2013-04-06.tar.gz -C /usr/bin
rm -f ffmpeg.static.32bit.2013-04-06.tar.gz

# install pylast (needed for lastgenre plugin)
pip install pylast

# install beets
#pip install beets
pip install beets

# install discogs client libs - needed for discogs plugin
pip install discogs-client

# install pyacoustid (needed for chromaprint)
pip install pyacoustid

# copy Chromaprint binary to path
cp &plg;/fpcalc /usr/local/sbin/fpcalc

# setup global environment variable, needed so beets knows where to find its config file
! grep -q BEETSDIR /etc/profile &amp;&amp; sed -i '$a\export BEETSDIR='/\boot/\config/\plugins/\beets'' /etc/profile

#cleanup tmp
rm -rf pip-1.3.tar.gz pip-1.3 pip-build-root

rm /tmp/plugin-install
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/beets/beets.page">
<INLINE>
Menu="NetworkServices"
Icon="beets.png"
Version=&plgver;
Author=&author;
Type="php"
Title=&plugin;
</INLINE>
</FILE>

<FILE Name="/var/log/plugins/beets">
<INLINE>
&plugin; v&plgver;
</INLINE>
</FILE>

<FILE Name="/tmp/plugin-development" Run="/bin/bash">
<INLINE>
if [ "&dev;" == "true" ]; then
  if [ -f /boot/config/plugins/beets.php ]; then
    rm -f &gui;/beets/beets.php
    ln -s /boot/config/plugins/beets.php &gui;/beets/beets.php
  else
    mv &gui;/beets/beets.php /boot/config/plugins/beets.php
    ln -s /boot/config/plugins/beets.php &gui;/beets/beets.php
  fi
  if [ -f /boot/config/plugins/beetsctl.php ]; then
    rm -f &gui;/beets/beetsctl.php
    ln -s /boot/config/plugins/beetsctl.php &gui;/beets/beetsctl.php
  else
    mv &gui;/beets/beetsctl.php /boot/config/plugins/beetsctl.php
    ln -s /boot/config/plugins/beetsctl.php &gui;/beets/beetsctl.php
  fi  
  if [ -f /boot/config/plugins/rc.beets ]; then
    rm -f /etc/rc.d/rc.beets
    ln -s /boot/config/plugins/rc.beets /etc/rc.d/rc.beets
  else
    mv /etc/rc.d/rc.beets /boot/config/plugins/rc.beets
    ln -s /boot/config/plugins/rc.beets /etc/rc.d/rc.beets
  fi
fi

rm /tmp/plugin-development
</INLINE>
</FILE>

</PLUGIN>